[0m[1mmodule.eks.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_caller_identity.current: Read complete after 0s [id=434208318714][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.clickhouse_cluster.data.kubernetes_service.clickhouse_load_balancer[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "kubernetes_service" "clickhouse_load_balancer" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m spec   = (known after apply)
      [32m+[0m[0m status = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "clickhouse-chi"
          [32m+[0m[0m namespace        = "clickhouse"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.clickhouse_cluster.kubectl_manifest.clickhouse_cluster[0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_cluster" {
      [32m+[0m[0m api_version             = (known after apply)
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = (known after apply)
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m namespace               = (known after apply)
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = (known after apply)
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_cluster.kubernetes_namespace.clickhouse[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_namespace" "clickhouse" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m wait_for_default_service_account = false

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "clickhouse"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.clickhouse_cluster.null_resource.pre_destroy[0][0m will be created
[0m  [32m+[0m[0m resource "null_resource" "pre_destroy" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "kubeconfig" = (known after apply)
          [32m+[0m[0m "namespace"  = "clickhouse"
        }
    }

[1m  # module.clickhouse_cluster.null_resource.wait_for_clickhouse[0][0m will be created
[0m  [32m+[0m[0m resource "null_resource" "wait_for_clickhouse" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.clickhouse_cluster.random_password.this[0][0m will be created
[0m  [32m+[0m[0m resource "random_password" "this" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 22
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = false
      [32m+[0m[0m upper       = true
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["0305dd36f0305114428d7fc7061b1d71eab462f9"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "apiextensions.k8s.io/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "CustomResourceDefinition"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouseinstallations.clickhouse.altinity.com"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: apiextensions.k8s.io/v1
            kind: CustomResourceDefinition
            metadata:
              labels:
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouseinstallations.clickhouse.altinity.com
              namespace: kube-system
            spec:
              group: clickhouse.altinity.com
              names:
                kind: ClickHouseInstallation
                plural: clickhouseinstallations
                shortNames:
                - chi
                singular: clickhouseinstallation
              scope: Namespaced
              versions:
              - additionalPrinterColumns:
                - description: Operator version
                  jsonPath: .status.chop-version
                  name: version
                  priority: 1
                  type: string
                - description: Clusters count
                  jsonPath: .status.clusters
                  name: clusters
                  type: integer
                - description: Shards count
                  jsonPath: .status.shards
                  name: shards
                  priority: 1
                  type: integer
                - description: Hosts count
                  jsonPath: .status.hosts
                  name: hosts
                  type: integer
                - description: TaskID
                  jsonPath: .status.taskID
                  name: taskID
                  priority: 1
                  type: string
                - description: CHI status
                  jsonPath: .status.status
                  name: status
                  type: string
                - description: Updated hosts count
                  jsonPath: .status.hostsUpdated
                  name: hosts-updated
                  priority: 1
                  type: integer
                - description: Added hosts count
                  jsonPath: .status.hostsAdded
                  name: hosts-added
                  priority: 1
                  type: integer
                - description: Completed hosts count
                  jsonPath: .status.hostsCompleted
                  name: hosts-completed
                  type: integer
                - description: Hosts deleted count
                  jsonPath: .status.hostsDeleted
                  name: hosts-deleted
                  priority: 1
                  type: integer
                - description: Hosts to be deleted count
                  jsonPath: .status.hostsDelete
                  name: hosts-delete
                  priority: 1
                  type: integer
                - description: Client access endpoint
                  jsonPath: .status.endpoint
                  name: endpoint
                  priority: 1
                  type: string
                - description: Age of the resource
                  jsonPath: .metadata.creationTimestamp
                  name: age
                  type: date
                name: v1
                schema:
                  openAPIV3Schema:
                    description: define a set of Kubernetes resources (StatefulSet, PVC, Service,
                      ConfigMap) which describe behavior one or more ClickHouse clusters
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this representation
                          of an object. Servers should convert recognized schemas to the latest
                          internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST resource this
                          object represents. Servers may infer this from the endpoint the client
                          submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        type: object
                      spec:
                        description: |
                          Specification of the desired behavior of one or more ClickHouse clusters
                          More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
                        properties:
                          configuration:
                            description: allows configure multiple aspects and behavior for `clickhouse-server`
                              instance and also allows describe multiple `clickhouse-server` clusters
                              inside one `chi` resource
                            properties:
                              clusters:
                                description: |
                                  describes ClickHouse clusters layout and allows change settings on cluster-level, shard-level and replica-level
                                  every cluster is a set of StatefulSet, one StatefulSet contains only one Pod with `clickhouse-server`
                                  all Pods will rendered in <remote_server> part of ClickHouse configs, mounted from ConfigMap as `/etc/clickhouse-server/config.d/chop-generated-remote_servers.xml`
                                  Clusters will use for Distributed table engine, more details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                  If `cluster` contains zookeeper settings (could be inherited from top `chi` level), when you can create *ReplicatedMergeTree tables
                                items:
                                  properties:
                                    files:
                                      description: |
                                        optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                        override top-level `chi.spec.configuration.files`
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    insecure:
                                      description: optional, open insecure ports for cluster,
                                        defaults to "yes"
                                      enum:
                                      - ""
                                      - "0"
                                      - "1"
                                      - "False"
                                      - "false"
                                      - "True"
                                      - "true"
                                      - "No"
                                      - "no"
                                      - "Yes"
                                      - "yes"
                                      - "Off"
                                      - "off"
                                      - "On"
                                      - "on"
                                      - Disable
                                      - disable
                                      - Enable
                                      - enable
                                      - Disabled
                                      - disabled
                                      - Enabled
                                      - enabled
                                      type: string
                                    layout:
                                      description: |
                                        describe current cluster layout, how much shards in cluster, how much replica in shard
                                        allows override settings on each shard and replica separatelly
                                      properties:
                                        replicas:
                                          description: optional, allows override top-level `chi.spec.configuration`
                                            and cluster-level `chi.spec.configuration.clusters`
                                            configuration for each replica and each shard relates
                                            to selected replica, use it only if you fully understand
                                            what you do
                                          items:
                                            properties:
                                              files:
                                                description: |
                                                  optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                  override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              name:
                                                description: optional, by default replica name
                                                  is generated, but you can override it and setup
                                                  custom name
                                                maxLength: 15
                                                minLength: 1
                                                pattern: ^[a-zA-Z0-9-]{0,15}$
                                                type: string
                                              settings:
                                                description: |
                                                  optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                  override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
                                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              shards:
                                                description: optional, list of shards related
                                                  to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards`
                                                  presents
                                                items:
                                                  properties:
                                                    files:
                                                      description: |
                                                        optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                        override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    httpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `http` for selected shard, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                        allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    httpsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    insecure:
                                                      description: |
                                                        optional, open insecure ports for cluster, defaults to "yes"
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    interserverHTTPPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `interserver` for selected shard, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                        allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    name:
                                                      description: optional, by default shard
                                                        name is generated, but you can override
                                                        it and setup custom name
                                                      maxLength: 15
                                                      minLength: 1
                                                      pattern: ^[a-zA-Z0-9-]{0,15}$
                                                      type: string
                                                    secure:
                                                      description: |
                                                        optional, open secure ports
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    settings:
                                                      description: |
                                                        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
                                                        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    tcpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `tcp` for selected shard, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                        allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    templates:
                                                      description: |
                                                        optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                        override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
                                                      properties:
                                                        clusterServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        dataVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse data directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        hostTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.hostTemplates,
                                                            which will apply to configure every
                                                            `clickhouse-server` instance during
                                                            render ConfigMap resources which will
                                                            mount into `Pod`
                                                          type: string
                                                        logVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse log directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        podTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.podTemplates,
                                                            allows customization each `Pod` resource
                                                            during render and reconcile each StatefulSet.spec
                                                            resource described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        replicaServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each replica inside each
                                                            shard inside each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        serviceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for one `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover all clusters in whole
                                                            `chi` resource
                                                          type: string
                                                        shardServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each shard inside clickhouse
                                                            cluster described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        volumeClaimTemplate:
                                                          description: DEPRECATED! VolumeClaimTemplate
                                                            is deprecated in favor of DataVolumeClaimTemplate
                                                            and LogVolumeClaimTemplate
                                                          type: string
                                                      type: object
                                                    tlsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                  type: object
                                                type: array
                                              shardsCount:
                                                description: optional, count of shards related
                                                  to current replica, you can override each shard
                                                  behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
                                                minimum: 1
                                                type: integer
                                              templates:
                                                description: |
                                                  optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                  override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
                                                properties:
                                                  clusterServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  dataVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse data directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  hostTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.hostTemplates, which
                                                      will apply to configure every `clickhouse-server`
                                                      instance during render ConfigMap resources
                                                      which will mount into `Pod`
                                                    type: string
                                                  logVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse log directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  podTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.podTemplates, allows
                                                      customization each `Pod` resource during
                                                      render and reconcile each StatefulSet.spec
                                                      resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  replicaServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each replica inside each shard
                                                      inside each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  serviceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for one `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover all clusters in whole `chi`
                                                      resource
                                                    type: string
                                                  shardServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each shard inside clickhouse
                                                      cluster described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  volumeClaimTemplate:
                                                    description: DEPRECATED! VolumeClaimTemplate
                                                      is deprecated in favor of DataVolumeClaimTemplate
                                                      and LogVolumeClaimTemplate
                                                    type: string
                                                type: object
                                            type: object
                                          type: array
                                        replicasCount:
                                          description: how much replicas in each shards for current
                                            ClickHouse cluster will run in Kubernetes, each replica
                                            is a separate `StatefulSet` which contains only one
                                            `Pod` with `clickhouse-server` instance, every shard
                                            contains 1 replica by default
                                          type: integer
                                        shards:
                                          description: optional, allows override top-level `chi.spec.configuration`,
                                            cluster-level `chi.spec.configuration.clusters` settings
                                            for each shard separately, use it only if you fully
                                            understand what you do
                                          items:
                                            properties:
                                              definitionType:
                                                description: DEPRECATED - to be removed soon
                                                type: string
                                              files:
                                                description: |
                                                  optional, allows define content of any setting file inside each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                  override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              internalReplication:
                                                description: |
                                                  optional, `true` by default when `chi.spec.configuration.clusters[].layout.ReplicaCount` > 1 and 0 otherwise
                                                  allows setup <internal_replication> setting which will use during insert into tables with `Distributed` engine for insert only in one live replica and other replicas will download inserted data during replication,
                                                  will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                                  More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                                enum:
                                                - ""
                                                - "0"
                                                - "1"
                                                - "False"
                                                - "false"
                                                - "True"
                                                - "true"
                                                - "No"
                                                - "no"
                                                - "Yes"
                                                - "yes"
                                                - "Off"
                                                - "off"
                                                - "On"
                                                - "on"
                                                - Disable
                                                - disable
                                                - Enable
                                                - enable
                                                - Disabled
                                                - disabled
                                                - Enabled
                                                - enabled
                                                type: string
                                              name:
                                                description: optional, by default shard name is
                                                  generated, but you can override it and setup
                                                  custom name
                                                maxLength: 15
                                                minLength: 1
                                                pattern: ^[a-zA-Z0-9-]{0,15}$
                                                type: string
                                              replicas:
                                                description: |
                                                  optional, allows override behavior for selected replicas from cluster-level `chi.spec.configuration.clusters` and shard-level `chi.spec.configuration.clusters.layout.shards`
                                                items:
                                                  properties:
                                                    files:
                                                      description: |
                                                        optional, allows define content of any setting file inside `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                        override top-level `chi.spec.configuration.files`, cluster-level `chi.spec.configuration.clusters.files` and shard-level `chi.spec.configuration.clusters.layout.shards.files`
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    httpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `http` for selected replica, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                        allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    httpsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    insecure:
                                                      description: |
                                                        optional, open insecure ports for cluster, defaults to "yes"
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    interserverHTTPPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `interserver` for selected replica, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                        allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    name:
                                                      description: optional, by default replica
                                                        name is generated, but you can override
                                                        it and setup custom name
                                                      maxLength: 15
                                                      minLength: 1
                                                      pattern: ^[a-zA-Z0-9-]{0,15}$
                                                      type: string
                                                    secure:
                                                      description: |
                                                        optional, open secure ports
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    settings:
                                                      description: |
                                                        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and shard-level `chi.spec.configuration.clusters.layout.shards.settings`
                                                        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    tcpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `tcp` for selected replica, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                        allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    templates:
                                                      description: |
                                                        optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                        override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates` and shard-level `chi.spec.configuration.clusters.layout.shards.templates`
                                                      properties:
                                                        clusterServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        dataVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse data directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        hostTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.hostTemplates,
                                                            which will apply to configure every
                                                            `clickhouse-server` instance during
                                                            render ConfigMap resources which will
                                                            mount into `Pod`
                                                          type: string
                                                        logVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse log directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        podTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.podTemplates,
                                                            allows customization each `Pod` resource
                                                            during render and reconcile each StatefulSet.spec
                                                            resource described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        replicaServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each replica inside each
                                                            shard inside each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        serviceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for one `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover all clusters in whole
                                                            `chi` resource
                                                          type: string
                                                        shardServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each shard inside clickhouse
                                                            cluster described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        volumeClaimTemplate:
                                                          description: DEPRECATED! VolumeClaimTemplate
                                                            is deprecated in favor of DataVolumeClaimTemplate
                                                            and LogVolumeClaimTemplate
                                                          type: string
                                                      type: object
                                                    tlsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                  type: object
                                                type: array
                                              replicasCount:
                                                description: |
                                                  optional, how much replicas in selected shard for selected ClickHouse cluster will run in Kubernetes, each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
                                                  shard contains 1 replica by default
                                                  override cluster-level `chi.spec.configuration.clusters.layout.replicasCount`
                                                minimum: 1
                                                type: integer
                                              settings:
                                                description: |
                                                  optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                                  override top-level `chi.spec.configuration.settings` and cluster-level `chi.spec.configuration.clusters.settings`
                                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              templates:
                                                description: |
                                                  optional, configuration of the templates names which will use for generate Kubernetes resources according to selected shard
                                                  override top-level `chi.spec.configuration.templates` and cluster-level `chi.spec.configuration.clusters.templates`
                                                properties:
                                                  clusterServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  dataVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse data directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  hostTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.hostTemplates, which
                                                      will apply to configure every `clickhouse-server`
                                                      instance during render ConfigMap resources
                                                      which will mount into `Pod`
                                                    type: string
                                                  logVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse log directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  podTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.podTemplates, allows
                                                      customization each `Pod` resource during
                                                      render and reconcile each StatefulSet.spec
                                                      resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  replicaServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each replica inside each shard
                                                      inside each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  serviceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for one `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover all clusters in whole `chi`
                                                      resource
                                                    type: string
                                                  shardServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each shard inside clickhouse
                                                      cluster described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  volumeClaimTemplate:
                                                    description: DEPRECATED! VolumeClaimTemplate
                                                      is deprecated in favor of DataVolumeClaimTemplate
                                                      and LogVolumeClaimTemplate
                                                    type: string
                                                type: object
                                              weight:
                                                description: |
                                                  optional, 1 by default, allows setup shard <weight> setting which will use during insert into tables with `Distributed` engine,
                                                  will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                                  More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                                type: integer
                                            type: object
                                          type: array
                                        shardsCount:
                                          description: how much shards for current ClickHouse
                                            cluster will run in Kubernetes, each shard contains
                                            shared-nothing part of data and contains set of replicas,
                                            cluster contains 1 shard by default
                                          type: integer
                                        type:
                                          description: DEPRECATED - to be removed soon
                                          type: string
                                      type: object
                                    name:
                                      description: cluster name, used to identify set of ClickHouse
                                        servers and wide used during generate names of related
                                        Kubernetes resources
                                      maxLength: 15
                                      minLength: 1
                                      pattern: ^[a-zA-Z0-9-]{0,15}$
                                      type: string
                                    schemaPolicy:
                                      description: |
                                        describes how schema is propagated within replicas and shards
                                      properties:
                                        replica:
                                          description: how schema is propagated within a replica
                                          enum:
                                          - ""
                                          - None
                                          - All
                                          type: string
                                        shard:
                                          description: how schema is propagated between shards
                                          enum:
                                          - ""
                                          - None
                                          - All
                                          - DistributedTablesOnly
                                          type: string
                                      type: object
                                    secret:
                                      description: optional, shared secret value to secure cluster
                                        communications
                                      properties:
                                        auto:
                                          description: Auto-generate shared secret value to secure
                                            cluster communications
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                        value:
                                          description: Cluster shared secret value in plain text
                                          type: string
                                        valueFrom:
                                          description: Cluster shared secret source
                                          properties:
                                            secretKeyRef:
                                              description: |
                                                Selects a key of a secret in the clickhouse installation namespace.
                                                Should not be used if value is not empty.
                                              properties:
                                                key:
                                                  description: The key of the secret to select
                                                    from. Must be a valid secret key.
                                                  type: string
                                                name:
                                                  description: |
                                                    Name of the referent. More info:
                                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret or its
                                                    key must be defined
                                                  type: boolean
                                              required:
                                              - name
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    secure:
                                      description: optional, open secure ports for cluster
                                      enum:
                                      - ""
                                      - "0"
                                      - "1"
                                      - "False"
                                      - "false"
                                      - "True"
                                      - "true"
                                      - "No"
                                      - "no"
                                      - "Yes"
                                      - "yes"
                                      - "Off"
                                      - "off"
                                      - "On"
                                      - "on"
                                      - Disable
                                      - disable
                                      - Enable
                                      - enable
                                      - Disabled
                                      - disabled
                                      - Enabled
                                      - enabled
                                      type: string
                                    settings:
                                      description: |
                                        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                        override top-level `chi.spec.configuration.settings`
                                        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    templates:
                                      description: |
                                        optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
                                        override top-level `chi.spec.configuration.templates`
                                      properties:
                                        clusterServiceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for each `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            each clickhouse cluster described in `chi.spec.configuration.clusters`
                                          type: string
                                        dataVolumeClaimTemplate:
                                          description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                            allows customization each `PVC` which will mount for
                                            clickhouse data directory in each `Pod` during render
                                            and reconcile every StatefulSet.spec resource described
                                            in `chi.spec.configuration.clusters`
                                          type: string
                                        hostTemplate:
                                          description: optional, template name from chi.spec.templates.hostTemplates,
                                            which will apply to configure every `clickhouse-server`
                                            instance during render ConfigMap resources which will
                                            mount into `Pod`
                                          type: string
                                        logVolumeClaimTemplate:
                                          description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                            allows customization each `PVC` which will mount for
                                            clickhouse log directory in each `Pod` during render
                                            and reconcile every StatefulSet.spec resource described
                                            in `chi.spec.configuration.clusters`
                                          type: string
                                        podTemplate:
                                          description: optional, template name from chi.spec.templates.podTemplates,
                                            allows customization each `Pod` resource during render
                                            and reconcile each StatefulSet.spec resource described
                                            in `chi.spec.configuration.clusters`
                                          type: string
                                        replicaServiceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for each `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            each replica inside each shard inside each clickhouse
                                            cluster described in `chi.spec.configuration.clusters`
                                          type: string
                                        serviceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for one `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            all clusters in whole `chi` resource
                                          type: string
                                        shardServiceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for each `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            each shard inside clickhouse cluster described in
                                            `chi.spec.configuration.clusters`
                                          type: string
                                        volumeClaimTemplate:
                                          description: DEPRECATED! VolumeClaimTemplate is deprecated
                                            in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
                                          type: string
                                      type: object
                                    zookeeper:
                                      description: |
                                        optional, allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` only in current ClickHouse cluster, during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                                        override top-level `chi.spec.configuration.zookeeper` settings
                                      properties:
                                        identity:
                                          description: optional access credentials string with
                                            `user:password` format used when use digest authorization
                                            in Zookeeper
                                          type: string
                                        nodes:
                                          description: describe every available zookeeper cluster
                                            node for interaction
                                          items:
                                            properties:
                                              host:
                                                description: dns name or ip address for Zookeeper
                                                  node
                                                type: string
                                              port:
                                                description: TCP port which used to connect to
                                                  Zookeeper node
                                                maximum: 65535
                                                minimum: 0
                                                type: integer
                                              secure:
                                                description: if a secure connection to Zookeeper
                                                  is required
                                                enum:
                                                - ""
                                                - "0"
                                                - "1"
                                                - "False"
                                                - "false"
                                                - "True"
                                                - "true"
                                                - "No"
                                                - "no"
                                                - "Yes"
                                                - "yes"
                                                - "Off"
                                                - "off"
                                                - "On"
                                                - "on"
                                                - Disable
                                                - disable
                                                - Enable
                                                - enable
                                                - Disabled
                                                - disabled
                                                - Enabled
                                                - enabled
                                                type: string
                                            type: object
                                          type: array
                                        operation_timeout_ms:
                                          description: one operation timeout during Zookeeper
                                            transactions
                                          type: integer
                                        root:
                                          description: optional root znode path inside zookeeper
                                            to store ClickHouse related data (replication queue
                                            or distributed DDL)
                                          type: string
                                        session_timeout_ms:
                                          description: session timeout during connect to Zookeeper
                                          type: integer
                                      type: object
                                  type: object
                                type: array
                              files:
                                description: |
                                  allows define content of any setting file inside each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                  every key in this object is the file name
                                  every value in this object is the file content
                                  you can use `!!binary |` and base64 for binary files, see details here https://yaml.org/type/binary.html
                                  each key could contains prefix like USERS, COMMON, HOST or config.d, users.d, cond.d, wrong prefixes will ignored, subfolders also will ignored
                                  More details: https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/05-settings-05-files-nested.yaml
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              profiles:
                                description: |
                                  allows configure <yandex><profiles>..</profiles></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                                  you can configure any aspect of settings profile
                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings-profiles/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationprofiles
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              quotas:
                                description: |
                                  allows configure <yandex><quotas>..</quotas></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                                  you can configure any aspect of resource quotas
                                  More details: https://clickhouse.tech/docs/en/operations/quotas/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationquotas
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              settings:
                                description: |
                                  allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationsettings
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              users:
                                description: |
                                  allows configure <yandex><users>..</users></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                                  you can configure password hashed, authorization restrictions, database level security row filters etc.
                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings-users/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationusers
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              zookeeper:
                                description: |
                                  allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                                  `clickhouse-operator` itself doesn't manage Zookeeper, please install Zookeeper separatelly look examples on https://github.com/Altinity/clickhouse-operator/tree/master/deploy/zookeeper/
                                  currently, zookeeper (or clickhouse-keeper replacement) used for *ReplicatedMergeTree table engines and for `distributed_ddl`
                                  More details: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings_zookeeper
                                properties:
                                  identity:
                                    description: optional access credentials string with `user:password`
                                      format used when use digest authorization in Zookeeper
                                    type: string
                                  nodes:
                                    description: describe every available zookeeper cluster node
                                      for interaction
                                    items:
                                      properties:
                                        host:
                                          description: dns name or ip address for Zookeeper node
                                          type: string
                                        port:
                                          description: TCP port which used to connect to Zookeeper
                                            node
                                          maximum: 65535
                                          minimum: 0
                                          type: integer
                                        secure:
                                          description: if a secure connection to Zookeeper is
                                            required
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                      type: object
                                    type: array
                                  operation_timeout_ms:
                                    description: one operation timeout during Zookeeper transactions
                                    type: integer
                                  root:
                                    description: optional root znode path inside zookeeper to
                                      store ClickHouse related data (replication queue or distributed
                                      DDL)
                                    type: string
                                  session_timeout_ms:
                                    description: session timeout during connect to Zookeeper
                                    type: integer
                                type: object
                            type: object
                          defaults:
                            description: |
                              define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
                              More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
                            properties:
                              distributedDDL:
                                description: |
                                  allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
                                  More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
                                properties:
                                  profile:
                                    description: Settings from this profile will be used to execute
                                      DDL queries
                                    type: string
                                type: object
                              replicasUseFQDN:
                                description: |
                                  define should replicas be specified by FQDN in `<host></host>`.
                                  In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
                                  "yes" by default
                                enum:
                                - ""
                                - "0"
                                - "1"
                                - "False"
                                - "false"
                                - "True"
                                - "true"
                                - "No"
                                - "no"
                                - "Yes"
                                - "yes"
                                - "Off"
                                - "off"
                                - "On"
                                - "on"
                                - Disable
                                - disable
                                - Enable
                                - enable
                                - Disabled
                                - disabled
                                - Enabled
                                - enabled
                                type: string
                              storageManagement:
                                description: default storage management options
                                properties:
                                  provisioner:
                                    description: defines `PVC` provisioner - be it StatefulSet
                                      or the Operator
                                    enum:
                                    - ""
                                    - StatefulSet
                                    - Operator
                                    type: string
                                  reclaimPolicy:
                                    description: |
                                      defines behavior of `PVC` deletion.
                                      `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
                                    enum:
                                    - ""
                                    - Retain
                                    - Delete
                                    type: string
                                type: object
                              templates:
                                description: optional, configuration of the templates names which
                                  will use for generate Kubernetes resources according to one
                                  or more ClickHouse clusters described in current ClickHouseInstallation
                                  (chi) resource
                                properties:
                                  clusterServiceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for each `Service` resource which will
                                      created by `clickhouse-operator` which cover each clickhouse
                                      cluster described in `chi.spec.configuration.clusters`
                                    type: string
                                  dataVolumeClaimTemplate:
                                    description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                      allows customization each `PVC` which will mount for clickhouse
                                      data directory in each `Pod` during render and reconcile
                                      every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                    type: string
                                  hostTemplate:
                                    description: optional, template name from chi.spec.templates.hostTemplates,
                                      which will apply to configure every `clickhouse-server`
                                      instance during render ConfigMap resources which will mount
                                      into `Pod`
                                    type: string
                                  logVolumeClaimTemplate:
                                    description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                      allows customization each `PVC` which will mount for clickhouse
                                      log directory in each `Pod` during render and reconcile
                                      every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                    type: string
                                  podTemplate:
                                    description: optional, template name from chi.spec.templates.podTemplates,
                                      allows customization each `Pod` resource during render and
                                      reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                    type: string
                                  replicaServiceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for each `Service` resource which will
                                      created by `clickhouse-operator` which cover each replica
                                      inside each shard inside each clickhouse cluster described
                                      in `chi.spec.configuration.clusters`
                                    type: string
                                  serviceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for one `Service` resource which will
                                      created by `clickhouse-operator` which cover all clusters
                                      in whole `chi` resource
                                    type: string
                                  shardServiceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for each `Service` resource which will
                                      created by `clickhouse-operator` which cover each shard
                                      inside clickhouse cluster described in `chi.spec.configuration.clusters`
                                    type: string
                                  volumeClaimTemplate:
                                    description: DEPRECATED! VolumeClaimTemplate is deprecated
                                      in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
                                    type: string
                                type: object
                            type: object
                          namespaceDomainPattern:
                            description: |
                              Custom domain pattern which will be used for DNS names of `Service` or `Pod`.
                              Typical use scenario - custom cluster domain in Kubernetes cluster
                              Example: %s.svc.my.test
                            type: string
                          reconciling:
                            description: optional, allows tuning reconciling cycle for ClickhouseInstallation
                              from clickhouse-operator side
                            properties:
                              cleanup:
                                description: optional, define behavior for cleanup Kubernetes
                                  resources during reconcile cycle
                                properties:
                                  reconcileFailedObjects:
                                    description: what clickhouse-operator shall do when reconciling
                                      Kubernetes resources are failed, default behavior is `Retain`
                                    properties:
                                      configMap:
                                        description: behavior policy for failed ConfigMap reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      pvc:
                                        description: behavior policy for failed PVC reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      service:
                                        description: behavior policy for failed Service reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      statefulSet:
                                        description: behavior policy for failed StatefulSet reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                    type: object
                                  unknownObjects:
                                    description: what clickhouse-operator shall do when found
                                      Kubernetes resources which should be managed with clickhouse-operator,
                                      but not have `ownerReference` to any currently managed `ClickHouseInstallation`
                                      resource, default behavior is `Delete`
                                    properties:
                                      configMap:
                                        description: behavior policy for unknown ConfigMap, Delete
                                          by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      pvc:
                                        description: behavior policy for unknown PVC, Delete by
                                          default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      service:
                                        description: behavior policy for unknown Service, Delete
                                          by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      statefulSet:
                                        description: behavior policy for unknown StatefulSet,
                                          Delete by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                    type: object
                                type: object
                              configMapPropagationTimeout:
                                description: |
                                  Timeout in seconds for `clickhouse-operator` to wait for modified `ConfigMap` to propagate into the `Pod`
                                  More details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
                                maximum: 3600
                                minimum: 0
                                type: integer
                              policy:
                                description: DEPRECATED
                                type: string
                            type: object
                          restart:
                            description: |
                              In case 'RollingUpdate' specified, the operator will always restart ClickHouse pods during reconcile.
                              This options is used in rare cases when force restart is required and is typically removed after the use in order to avoid unneeded restarts.
                            enum:
                            - ""
                            - RollingUpdate
                            type: string
                          stop:
                            description: |
                              Allows to stop all ClickHouse clusters defined in a CHI.
                              Works as the following:
                               - When `stop` is `1` operator sets `Replicas: 0` in each StatefulSet. Thie leads to having all `Pods` and `Service` deleted. All PVCs are kept intact.
                               - When `stop` is `0` operator sets `Replicas: 1` and `Pod`s and `Service`s will created again and all retained PVCs will be attached to `Pod`s.
                            enum:
                            - ""
                            - "0"
                            - "1"
                            - "False"
                            - "false"
                            - "True"
                            - "true"
                            - "No"
                            - "no"
                            - "Yes"
                            - "yes"
                            - "Off"
                            - "off"
                            - "On"
                            - "on"
                            - Disable
                            - disable
                            - Enable
                            - enable
                            - Disabled
                            - disabled
                            - Enabled
                            - enabled
                            type: string
                          taskID:
                            description: |
                              Allows to define custom taskID for CHI update and watch status of this update execution.
                              Displayed in all .status.taskID* fields.
                              By default (if not filled) every update of CHI manifest will generate random taskID
                            type: string
                          templates:
                            description: allows define templates which will use for render Kubernetes
                              resources like StatefulSet, ConfigMap, Service, PVC, by default,
                              clickhouse-operator have own templates, but you can override it
                            properties:
                              hostTemplates:
                                description: hostTemplate will use during apply to generate `clickhose-server`
                                  config files
                                items:
                                  properties:
                                    name:
                                      description: template name, could use to link inside top-level
                                        `chi.spec.defaults.templates.hostTemplate`, cluster-level
                                        `chi.spec.configuration.clusters.templates.hostTemplate`,
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`,
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
                                      type: string
                                    portDistribution:
                                      description: define how will distribute numeric values of
                                        named ports in `Pod.spec.containers.ports` and clickhouse-server
                                        configs
                                      items:
                                        properties:
                                          type:
                                            description: type of distribution, when `Unspecified`
                                              (default value) then all listen ports on clickhouse-server
                                              configuration in all Pods will have the same value,
                                              when `ClusterScopeIndex` then ports will increment
                                              to offset from base value depends on shard and replica
                                              index inside cluster with combination of `chi.spec.templates.podTemlates.spec.HostNetwork`
                                              it allows setup ClickHouse cluster inside Kubernetes
                                              and provide access via external network bypass Kubernetes
                                              internal network
                                            enum:
                                            - ""
                                            - Unspecified
                                            - ClusterScopeIndex
                                            type: string
                                        type: object
                                      type: array
                                    spec:
                                      properties:
                                        files:
                                          description: |
                                            optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        httpPort:
                                          description: |
                                            optional, setup `http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                            if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=http]`
                                            More info: https://clickhouse.tech/docs/en/interfaces/http/
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        httpsPort:
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        insecure:
                                          description: |
                                            optional, open insecure ports for cluster, defaults to "yes"
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                        interserverHTTPPort:
                                          description: |
                                            optional, setup `interserver_http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                            if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=interserver]`
                                            More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#interserver-http-port
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        name:
                                          description: by default, hostname will generate, but
                                            this allows define custom name for each `clickhuse-server`
                                          maxLength: 15
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]{0,15}$
                                          type: string
                                        secure:
                                          description: |
                                            optional, open secure ports
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                        settings:
                                          description: |
                                            optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                            More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        tcpPort:
                                          description: |
                                            optional, setup `tcp_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                            if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=tcp]`
                                            More info: https://clickhouse.tech/docs/en/interfaces/tcp/
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        templates:
                                          description: be careful, this part of CRD allows override
                                            template inside template, don't use it if you don't
                                            understand what you do
                                          properties:
                                            clusterServiceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for each `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover each clickhouse cluster described in `chi.spec.configuration.clusters`
                                              type: string
                                            dataVolumeClaimTemplate:
                                              description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                                allows customization each `PVC` which will mount
                                                for clickhouse data directory in each `Pod` during
                                                render and reconcile every StatefulSet.spec resource
                                                described in `chi.spec.configuration.clusters`
                                              type: string
                                            hostTemplate:
                                              description: optional, template name from chi.spec.templates.hostTemplates,
                                                which will apply to configure every `clickhouse-server`
                                                instance during render ConfigMap resources which
                                                will mount into `Pod`
                                              type: string
                                            logVolumeClaimTemplate:
                                              description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                                allows customization each `PVC` which will mount
                                                for clickhouse log directory in each `Pod` during
                                                render and reconcile every StatefulSet.spec resource
                                                described in `chi.spec.configuration.clusters`
                                              type: string
                                            podTemplate:
                                              description: optional, template name from chi.spec.templates.podTemplates,
                                                allows customization each `Pod` resource during
                                                render and reconcile each StatefulSet.spec resource
                                                described in `chi.spec.configuration.clusters`
                                              type: string
                                            replicaServiceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for each `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover each replica inside each shard inside each
                                                clickhouse cluster described in `chi.spec.configuration.clusters`
                                              type: string
                                            serviceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for one `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover all clusters in whole `chi` resource
                                              type: string
                                            shardServiceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for each `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover each shard inside clickhouse cluster described
                                                in `chi.spec.configuration.clusters`
                                              type: string
                                            volumeClaimTemplate:
                                              description: DEPRECATED! VolumeClaimTemplate is
                                                deprecated in favor of DataVolumeClaimTemplate
                                                and LogVolumeClaimTemplate
                                              type: string
                                          type: object
                                        tlsPort:
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      type: object
                                  type: object
                                type: array
                              podTemplates:
                                description: |
                                  podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
                                  More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
                                items:
                                  properties:
                                    distribution:
                                      description: DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                                      enum:
                                      - ""
                                      - Unspecified
                                      - OnePerHost
                                      type: string
                                    generateName:
                                      description: allows define format for generated `Pod` name,
                                        look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                        for details about aviailable template variables
                                      type: string
                                    metadata:
                                      description: |
                                        allows pass standard object's metadata from template to Pod
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: template name, could use to link inside top-level
                                        `chi.spec.defaults.templates.podTemplate`, cluster-level
                                        `chi.spec.configuration.clusters.templates.podTemplate`,
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`,
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
                                      type: string
                                    podDistribution:
                                      description: define ClickHouse Pod distribution policy between
                                        Kubernetes Nodes inside Shard, Replica, Namespace, CHI,
                                        another ClickHouse cluster
                                      items:
                                        properties:
                                          number:
                                            description: define, how much ClickHouse Pods could
                                              be inside selected scope with selected distribution
                                              type
                                            maximum: 65535
                                            minimum: 0
                                            type: integer
                                          scope:
                                            description: scope for apply each podDistribution
                                            enum:
                                            - ""
                                            - Unspecified
                                            - Shard
                                            - Replica
                                            - Cluster
                                            - ClickHouseInstallation
                                            - Namespace
                                            type: string
                                          topologyKey:
                                            description: 'use for inter-pod affinity look to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
                                              More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity'
                                            type: string
                                          type:
                                            description: you can define multiple affinity policy
                                              types
                                            enum:
                                            - ""
                                            - Unspecified
                                            - ClickHouseAntiAffinity
                                            - ShardAntiAffinity
                                            - ReplicaAntiAffinity
                                            - AnotherNamespaceAntiAffinity
                                            - AnotherClickHouseInstallationAntiAffinity
                                            - AnotherClusterAntiAffinity
                                            - MaxNumberPerNode
                                            - NamespaceAffinity
                                            - ClickHouseInstallationAffinity
                                            - ClusterAffinity
                                            - ShardAffinity
                                            - ReplicaAffinity
                                            - PreviousTailAffinity
                                            - CircularReplication
                                            type: string
                                        type: object
                                      type: array
                                    spec:
                                      description: allows define whole Pod.spec inside StaefulSet.spec,
                                        look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
                                        for details
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    zone:
                                      description: allows define custom zone name and will separate
                                        ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                                      properties:
                                        key:
                                          description: optional, if defined, allows select kubernetes
                                            nodes by label with `name` equal `key`
                                          type: string
                                        values:
                                          description: optional, if defined, allows select kubernetes
                                            nodes by label with `value` in `values`
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                  type: object
                                type: array
                              serviceTemplates:
                                description: |
                                  allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
                                items:
                                  properties:
                                    generateName:
                                      description: allows define format for generated `Service`
                                        name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                        for details about aviailable template variables
                                      type: string
                                    metadata:
                                      description: |
                                        allows pass standard object's metadata from template to Service
                                        Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
                                        More info: https://kubernetes.io/docs/concepts/services-networking/service/
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: |
                                        template name, could use to link inside
                                        chi-level `chi.spec.defaults.templates.serviceTemplate`
                                        cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
                                      type: string
                                    spec:
                                      description: |
                                        describe behavior of generated Service
                                        More info: https://kubernetes.io/docs/concepts/services-networking/service/
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              volumeClaimTemplates:
                                description: allows define template for rendering `PVC` kubernetes
                                  resource, which would use inside `Pod` for mount clickhouse
                                  `data`, clickhouse `logs` or something else
                                items:
                                  properties:
                                    metadata:
                                      description: |
                                        allows to pass standard object's metadata from template to PVC
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: |
                                        template name, could use to link inside
                                        top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
                                        cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
                                      type: string
                                    provisioner:
                                      description: defines `PVC` provisioner - be it StatefulSet
                                        or the Operator
                                      enum:
                                      - ""
                                      - StatefulSet
                                      - Operator
                                      type: string
                                    reclaimPolicy:
                                      description: |
                                        defines behavior of `PVC` deletion.
                                        `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
                                      enum:
                                      - ""
                                      - Retain
                                      - Delete
                                      type: string
                                    spec:
                                      description: |
                                        allows define all aspects of `PVC` resource
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                            type: object
                          templating:
                            description: Optional, defines policy for applying current ClickHouseInstallationTemplate
                              to ClickHouseInstallation(s)
                            properties:
                              chiSelector:
                                description: Optional, defines selector for ClickHouseInstallation(s)
                                  to be templated with ClickhouseInstallationTemplate
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              policy:
                                description: |
                                  When defined as `auto` inside ClickhouseInstallationTemplate, this ClickhouseInstallationTemplate
                                  will be auto-added into ClickHouseInstallation, selectable by `chiSelector`.
                                  Default value is `manual`, meaning ClickHouseInstallation should request this ClickhouseInstallationTemplate explicitly.
                                enum:
                                - ""
                                - auto
                                - manual
                                type: string
                            type: object
                          troubleshoot:
                            description: |
                              Allows to troubleshoot Pods during CrashLoopBack state.
                              This may happen when wrong configuration applied, in this case `clickhouse-server` wouldn't start.
                              Command within ClickHouse container is modified with `sleep` in order to avoid quick restarts
                              and give time to troubleshoot via CLI.
                              Liveness and Readiness probes are disabled as well.
                            enum:
                            - ""
                            - "0"
                            - "1"
                            - "False"
                            - "false"
                            - "True"
                            - "true"
                            - "No"
                            - "no"
                            - "Yes"
                            - "yes"
                            - "Off"
                            - "off"
                            - "On"
                            - "on"
                            - Disable
                            - disable
                            - Enable
                            - enable
                            - Disabled
                            - disabled
                            - Enabled
                            - enabled
                            type: string
                          useTemplates:
                            description: list of `ClickHouseInstallationTemplate` (chit) resource
                              names which will merge with current `Chi` manifest during render
                              Kubernetes resources to create related ClickHouse clusters
                            items:
                              properties:
                                name:
                                  description: name of `ClickHouseInstallationTemplate` (chit)
                                    resource
                                  type: string
                                namespace:
                                  description: Kubernetes namespace where need search `chit` resource,
                                    depending on `watchNamespaces` settings in `clichouse-operator`
                                  type: string
                                useType:
                                  description: optional, current strategy is only merge, and current
                                    `chi` settings have more priority than merged template `chit`
                                  enum:
                                  - ""
                                  - merge
                                  type: string
                              type: object
                            type: array
                        type: object
                      status:
                        description: Current ClickHouseInstallation manifest status, contains
                          many fields like a normalized configuration, clickhouse-operator version,
                          current action and all applied action list, current taskID and all applied
                          taskIDs and other
                        properties:
                          action:
                            description: Action
                            type: string
                          actions:
                            description: Actions
                            items:
                              type: string
                            nullable: true
                            type: array
                          chop-commit:
                            description: ClickHouse operator git commit SHA
                            type: string
                          chop-date:
                            description: ClickHouse operator build date
                            type: string
                          chop-ip:
                            description: IP address of the operator's pod which managed this CHI
                            type: string
                          chop-version:
                            description: ClickHouse operator version
                            type: string
                          clusters:
                            description: Clusters count
                            minimum: 0
                            type: integer
                          endpoint:
                            description: Endpoint
                            type: string
                          error:
                            description: Last error
                            type: string
                          errors:
                            description: Errors
                            items:
                              type: string
                            nullable: true
                            type: array
                          fqdns:
                            description: Pods FQDNs
                            items:
                              type: string
                            nullable: true
                            type: array
                          generation:
                            description: Generation
                            minimum: 0
                            type: integer
                          hosts:
                            description: Hosts count
                            minimum: 0
                            type: integer
                          hostsAdded:
                            description: Added Hosts count
                            minimum: 0
                            type: integer
                          hostsCompleted:
                            description: Completed Hosts count
                            minimum: 0
                            type: integer
                          hostsDelete:
                            description: About to delete Hosts count
                            minimum: 0
                            type: integer
                          hostsDeleted:
                            description: Deleted Hosts count
                            minimum: 0
                            type: integer
                          hostsUpdated:
                            description: Updated Hosts count
                            minimum: 0
                            type: integer
                          hostsWithTablesCreated:
                            description: List of hosts with tables created by the operator
                            items:
                              type: string
                            nullable: true
                            type: array
                          normalized:
                            description: Normalized CHI requested
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          normalizedCompleted:
                            description: Normalized CHI completed
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          pod-ips:
                            description: Pod IPs
                            items:
                              type: string
                            nullable: true
                            type: array
                          pods:
                            description: Pods
                            items:
                              type: string
                            nullable: true
                            type: array
                          replicas:
                            description: Replicas count
                            minimum: 0
                            type: integer
                          shards:
                            description: Shards count
                            minimum: 0
                            type: integer
                          status:
                            description: Status
                            type: string
                          taskID:
                            description: Current task id
                            type: string
                          taskIDsCompleted:
                            description: Completed task ids
                            items:
                              type: string
                            nullable: true
                            type: array
                          taskIDsStarted:
                            description: Started task ids
                            items:
                              type: string
                            nullable: true
                            type: array
                          usedTemplates:
                            description: List of templates used to build this CHI
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nullable: true
                            type: array
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    required:
                    - spec
                    type: object
                served: true
                storage: true
                subresources:
                  status: {}
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["092b0ce5239c312632bfa309c5ec5c97c5616772"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ServiceAccount"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouse-operator"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              labels:
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouse-operator
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["17256944a5bfe78a44f08c9939afbaea45716318"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "rbac.authorization.k8s.io/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ClusterRoleBinding"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouse-operator-kube-system"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              labels:
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouse-operator-kube-system
              namespace: kube-system
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: clickhouse-operator-kube-system
            subjects:
            - kind: ServiceAccount
              name: clickhouse-operator
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["21b3144d67a77ebc2faa36999568fc8d2796c5a2"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ConfigMap"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "etc-clickhouse-operator-configd-files"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            data:
              01-clickhouse-01-listen.xml: |
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <yandex>
                    <!-- Listen wildcard address to allow accepting connections from other containers and host network. -->
                    <listen_host>::</listen_host>
                    <listen_host>0.0.0.0</listen_host>
                    <listen_try>1</listen_try>
                </yandex>
              01-clickhouse-02-logger.xml: |
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <yandex>
                    <logger>
                        <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
                        <level>debug</level>
                        <log>/var/log/clickhouse-server/clickhouse-server.log</log>
                        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
                        <size>1000M</size>
                        <count>10</count>
                        <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) -->
                        <console>1</console>
                    </logger>
                </yandex>
              01-clickhouse-03-query_log.xml: |
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <yandex>
                    <query_log replace="1">
                        <database>system</database>
                        <table>query_log</table>
                        <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                        <flush_interval_milliseconds>7500</flush_interval_milliseconds>
                    </query_log>
                    <query_thread_log remove="1"/>
                </yandex>
              01-clickhouse-04-part_log.xml: |
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <yandex>
                    <part_log replace="1">
                        <database>system</database>
                        <table>part_log</table>
                        <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                        <flush_interval_milliseconds>7500</flush_interval_milliseconds>
                    </part_log>
                </yandex>
              01-clickhouse-05-trace_log.xml: |
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <yandex>
                    <trace_log replace="1">
                        <database>system</database>
                        <table>trace_log</table>
                        <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                        <flush_interval_milliseconds>7500</flush_interval_milliseconds>
                    </trace_log>
                </yandex>
            kind: ConfigMap
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: etc-clickhouse-operator-configd-files
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["3aa105652ffe01f7656428262b921f48b25207c8"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "rbac.authorization.k8s.io/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ClusterRole"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouse-operator-kube-system"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRole
            metadata:
              labels:
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouse-operator-kube-system
              namespace: kube-system
            rules:
            - apiGroups:
              - ""
              resources:
              - configmaps
              - services
              - persistentvolumeclaims
              - secrets
              verbs:
              - get
              - list
              - patch
              - update
              - watch
              - create
              - delete
            - apiGroups:
              - ""
              resources:
              - endpoints
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - ""
              resources:
              - events
              verbs:
              - create
            - apiGroups:
              - ""
              resources:
              - persistentvolumes
              verbs:
              - get
              - list
              - patch
              - update
              - watch
            - apiGroups:
              - ""
              resources:
              - pods
              verbs:
              - get
              - list
              - patch
              - update
              - watch
              - delete
            - apiGroups:
              - apps
              resources:
              - statefulsets
              verbs:
              - get
              - list
              - patch
              - update
              - watch
              - create
              - delete
            - apiGroups:
              - apps
              resources:
              - replicasets
              verbs:
              - get
              - patch
              - update
              - delete
            - apiGroups:
              - apps
              resourceNames:
              - clickhouse-operator
              resources:
              - deployments
              verbs:
              - get
              - patch
              - update
              - delete
            - apiGroups:
              - policy
              resources:
              - poddisruptionbudgets
              verbs:
              - get
              - list
              - patch
              - update
              - watch
              - create
              - delete
            - apiGroups:
              - clickhouse.altinity.com
              resources:
              - clickhouseinstallations
              verbs:
              - get
              - patch
              - update
              - delete
            - apiGroups:
              - clickhouse.altinity.com
              resources:
              - clickhouseinstallations
              - clickhouseinstallationtemplates
              - clickhouseoperatorconfigurations
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - clickhouse.altinity.com
              resources:
              - clickhouseinstallations/finalizers
              - clickhouseinstallationtemplates/finalizers
              - clickhouseoperatorconfigurations/finalizers
              verbs:
              - update
            - apiGroups:
              - clickhouse.altinity.com
              resources:
              - clickhouseinstallations/status
              - clickhouseinstallationtemplates/status
              - clickhouseoperatorconfigurations/status
              verbs:
              - get
              - update
              - patch
              - create
              - delete
            - apiGroups:
              - ""
              resources:
              - secrets
              verbs:
              - get
              - list
            - apiGroups:
              - apiextensions.k8s.io
              resources:
              - customresourcedefinitions
              verbs:
              - get
              - list
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["5634905ad1f8ea39ac04c535dc9d459501c23612"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ConfigMap"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "etc-clickhouse-operator-usersd-files"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            data:
              01-clickhouse-operator-profile.xml: |
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <!--
                #
                # Template parameters available:
                #
                -->
                <yandex>
                    <!-- clickhouse-operator user is generated by the operator based on config.yaml in runtime -->
                    <profiles>
                        <clickhouse_operator>
                            <log_queries>0</log_queries>
                            <skip_unavailable_shards>1</skip_unavailable_shards>
                            <http_connection_timeout>10</http_connection_timeout>
                            <max_concurrent_queries_for_all_users>0</max_concurrent_queries_for_all_users>
                            <os_thread_priority>0</os_thread_priority>
                        </clickhouse_operator>
                    </profiles>
                </yandex>
              02-clickhouse-default-profile.xml: |-
                <!-- IMPORTANT -->
                <!-- This file is auto-generated -->
                <!-- Do not edit this file - all changes would be lost -->
                <!-- Edit appropriate template in the following folder: -->
                <!-- deploy/builder/templates-config -->
                <!-- IMPORTANT -->
                <yandex>
                  <profiles>
                    <default>
                      <os_thread_priority>2</os_thread_priority>
                      <log_queries>1</log_queries>
                      <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
                      <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
                      <parallel_view_processing>1</parallel_view_processing>
                      <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
                      <load_balancing>nearest_hostname</load_balancing>
                      <prefer_localhost_replica>0</prefer_localhost_replica>
                      <!-- materialize_ttl_recalculate_only>1</materialize_ttl_recalculate_only> 21.10 and above -->
                    </default>
                  </profiles>
                </yandex>
            kind: ConfigMap
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: etc-clickhouse-operator-usersd-files
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["6ea1ba889373e8d26de7bb23dffee038a18f87bd"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ConfigMap"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "etc-clickhouse-operator-templatesd-files"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            data:
              001-templates.json.example: |
                {
                  "apiVersion": "clickhouse.altinity.com/v1",
                  "kind": "ClickHouseInstallationTemplate",
                  "metadata": {
                    "name": "01-default-volumeclaimtemplate"
                  },
                  "spec": {
                    "templates": {
                      "volumeClaimTemplates": [
                        {
                          "name": "chi-default-volume-claim-template",
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "2Gi"
                              }
                            }
                          }
                        }
                      ],
                      "podTemplates": [
                        {
                          "name": "chi-default-oneperhost-pod-template",
                          "distribution": "OnePerHost",
                          "spec": {
                            "containers" : [
                              {
                                "name": "clickhouse",
                                "image": "clickhouse/clickhouse-server:22.3",
                                "ports": [
                                  {
                                    "name": "http",
                                    "containerPort": 8123
                                  },
                                  {
                                    "name": "client",
                                    "containerPort": 9000
                                  },
                                  {
                                    "name": "interserver",
                                    "containerPort": 9009
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              default-pod-template.yaml.example: |
                apiVersion: "clickhouse.altinity.com/v1"
                kind: "ClickHouseInstallationTemplate"
                metadata:
                  name: "default-oneperhost-pod-template"
                spec:
                  templates:
                    podTemplates:
                      - name: default-oneperhost-pod-template
                        distribution: "OnePerHost"
              default-storage-template.yaml.example: |
                apiVersion: "clickhouse.altinity.com/v1"
                kind: "ClickHouseInstallationTemplate"
                metadata:
                  name: "default-storage-template-2Gi"
                spec:
                  templates:
                    volumeClaimTemplates:
                      - name: default-storage-template-2Gi
                        spec:
                          accessModes:
                            - ReadWriteOnce
                          resources:
                            requests:
                              storage: 2Gi
              readme: Templates in this folder are packaged with an operator and available via
                'useTemplate'
            kind: ConfigMap
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: etc-clickhouse-operator-templatesd-files
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["9765da9b5e1c5811c2b08b8659e744b5b5c6bfa4"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "Secret"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouse-operator"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            kind: Secret
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouse-operator
              namespace: kube-system
            stringData:
              password: clickhouse_operator_password
              username: clickhouse_operator
            type: Opaque
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["c39851ddbf636152ac5355f342f0b7603aa0e5be"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "Service"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouse-operator-metrics"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            kind: Service
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouse-operator-metrics
              namespace: kube-system
            spec:
              ports:
              - name: clickhouse-metrics
                port: 8888
              - name: operator-metrics
                port: 9999
              selector:
                app: clickhouse-operator
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["d5f73dcd2cdc87543fbd5b52cf244fdca3f99eac"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ConfigMap"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "etc-clickhouse-operator-confd-files"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            data: null
            kind: ConfigMap
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: etc-clickhouse-operator-confd-files
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["edb82cdc9c8cb6832890d42d3e02f310addab725"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "apiextensions.k8s.io/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "CustomResourceDefinition"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouseinstallationtemplates.clickhouse.altinity.com"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: apiextensions.k8s.io/v1
            kind: CustomResourceDefinition
            metadata:
              labels:
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouseinstallationtemplates.clickhouse.altinity.com
              namespace: kube-system
            spec:
              group: clickhouse.altinity.com
              names:
                kind: ClickHouseInstallationTemplate
                plural: clickhouseinstallationtemplates
                shortNames:
                - chit
                singular: clickhouseinstallationtemplate
              scope: Namespaced
              versions:
              - additionalPrinterColumns:
                - description: Operator version
                  jsonPath: .status.chop-version
                  name: version
                  priority: 1
                  type: string
                - description: Clusters count
                  jsonPath: .status.clusters
                  name: clusters
                  type: integer
                - description: Shards count
                  jsonPath: .status.shards
                  name: shards
                  priority: 1
                  type: integer
                - description: Hosts count
                  jsonPath: .status.hosts
                  name: hosts
                  type: integer
                - description: TaskID
                  jsonPath: .status.taskID
                  name: taskID
                  priority: 1
                  type: string
                - description: CHI status
                  jsonPath: .status.status
                  name: status
                  type: string
                - description: Updated hosts count
                  jsonPath: .status.hostsUpdated
                  name: hosts-updated
                  priority: 1
                  type: integer
                - description: Added hosts count
                  jsonPath: .status.hostsAdded
                  name: hosts-added
                  priority: 1
                  type: integer
                - description: Completed hosts count
                  jsonPath: .status.hostsCompleted
                  name: hosts-completed
                  type: integer
                - description: Hosts deleted count
                  jsonPath: .status.hostsDeleted
                  name: hosts-deleted
                  priority: 1
                  type: integer
                - description: Hosts to be deleted count
                  jsonPath: .status.hostsDelete
                  name: hosts-delete
                  priority: 1
                  type: integer
                - description: Client access endpoint
                  jsonPath: .status.endpoint
                  name: endpoint
                  priority: 1
                  type: string
                - description: Age of the resource
                  jsonPath: .metadata.creationTimestamp
                  name: age
                  type: date
                name: v1
                schema:
                  openAPIV3Schema:
                    description: define a set of Kubernetes resources (StatefulSet, PVC, Service,
                      ConfigMap) which describe behavior one or more ClickHouse clusters
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this representation
                          of an object. Servers should convert recognized schemas to the latest
                          internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST resource this
                          object represents. Servers may infer this from the endpoint the client
                          submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        type: object
                      spec:
                        description: |
                          Specification of the desired behavior of one or more ClickHouse clusters
                          More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
                        properties:
                          configuration:
                            description: allows configure multiple aspects and behavior for `clickhouse-server`
                              instance and also allows describe multiple `clickhouse-server` clusters
                              inside one `chi` resource
                            properties:
                              clusters:
                                description: |
                                  describes ClickHouse clusters layout and allows change settings on cluster-level, shard-level and replica-level
                                  every cluster is a set of StatefulSet, one StatefulSet contains only one Pod with `clickhouse-server`
                                  all Pods will rendered in <remote_server> part of ClickHouse configs, mounted from ConfigMap as `/etc/clickhouse-server/config.d/chop-generated-remote_servers.xml`
                                  Clusters will use for Distributed table engine, more details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                  If `cluster` contains zookeeper settings (could be inherited from top `chi` level), when you can create *ReplicatedMergeTree tables
                                items:
                                  properties:
                                    files:
                                      description: |
                                        optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                        override top-level `chi.spec.configuration.files`
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    insecure:
                                      description: optional, open insecure ports for cluster,
                                        defaults to "yes"
                                      enum:
                                      - ""
                                      - "0"
                                      - "1"
                                      - "False"
                                      - "false"
                                      - "True"
                                      - "true"
                                      - "No"
                                      - "no"
                                      - "Yes"
                                      - "yes"
                                      - "Off"
                                      - "off"
                                      - "On"
                                      - "on"
                                      - Disable
                                      - disable
                                      - Enable
                                      - enable
                                      - Disabled
                                      - disabled
                                      - Enabled
                                      - enabled
                                      type: string
                                    layout:
                                      description: |
                                        describe current cluster layout, how much shards in cluster, how much replica in shard
                                        allows override settings on each shard and replica separatelly
                                      properties:
                                        replicas:
                                          description: optional, allows override top-level `chi.spec.configuration`
                                            and cluster-level `chi.spec.configuration.clusters`
                                            configuration for each replica and each shard relates
                                            to selected replica, use it only if you fully understand
                                            what you do
                                          items:
                                            properties:
                                              files:
                                                description: |
                                                  optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                  override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              name:
                                                description: optional, by default replica name
                                                  is generated, but you can override it and setup
                                                  custom name
                                                maxLength: 15
                                                minLength: 1
                                                pattern: ^[a-zA-Z0-9-]{0,15}$
                                                type: string
                                              settings:
                                                description: |
                                                  optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                  override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
                                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              shards:
                                                description: optional, list of shards related
                                                  to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards`
                                                  presents
                                                items:
                                                  properties:
                                                    files:
                                                      description: |
                                                        optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                        override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    httpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `http` for selected shard, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                        allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    httpsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    insecure:
                                                      description: |
                                                        optional, open insecure ports for cluster, defaults to "yes"
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    interserverHTTPPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `interserver` for selected shard, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                        allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    name:
                                                      description: optional, by default shard
                                                        name is generated, but you can override
                                                        it and setup custom name
                                                      maxLength: 15
                                                      minLength: 1
                                                      pattern: ^[a-zA-Z0-9-]{0,15}$
                                                      type: string
                                                    secure:
                                                      description: |
                                                        optional, open secure ports
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    settings:
                                                      description: |
                                                        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
                                                        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    tcpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `tcp` for selected shard, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                        allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    templates:
                                                      description: |
                                                        optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                        override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
                                                      properties:
                                                        clusterServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        dataVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse data directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        hostTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.hostTemplates,
                                                            which will apply to configure every
                                                            `clickhouse-server` instance during
                                                            render ConfigMap resources which will
                                                            mount into `Pod`
                                                          type: string
                                                        logVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse log directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        podTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.podTemplates,
                                                            allows customization each `Pod` resource
                                                            during render and reconcile each StatefulSet.spec
                                                            resource described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        replicaServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each replica inside each
                                                            shard inside each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        serviceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for one `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover all clusters in whole
                                                            `chi` resource
                                                          type: string
                                                        shardServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each shard inside clickhouse
                                                            cluster described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        volumeClaimTemplate:
                                                          description: DEPRECATED! VolumeClaimTemplate
                                                            is deprecated in favor of DataVolumeClaimTemplate
                                                            and LogVolumeClaimTemplate
                                                          type: string
                                                      type: object
                                                    tlsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                  type: object
                                                type: array
                                              shardsCount:
                                                description: optional, count of shards related
                                                  to current replica, you can override each shard
                                                  behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
                                                minimum: 1
                                                type: integer
                                              templates:
                                                description: |
                                                  optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                  override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
                                                properties:
                                                  clusterServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  dataVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse data directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  hostTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.hostTemplates, which
                                                      will apply to configure every `clickhouse-server`
                                                      instance during render ConfigMap resources
                                                      which will mount into `Pod`
                                                    type: string
                                                  logVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse log directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  podTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.podTemplates, allows
                                                      customization each `Pod` resource during
                                                      render and reconcile each StatefulSet.spec
                                                      resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  replicaServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each replica inside each shard
                                                      inside each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  serviceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for one `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover all clusters in whole `chi`
                                                      resource
                                                    type: string
                                                  shardServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each shard inside clickhouse
                                                      cluster described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  volumeClaimTemplate:
                                                    description: DEPRECATED! VolumeClaimTemplate
                                                      is deprecated in favor of DataVolumeClaimTemplate
                                                      and LogVolumeClaimTemplate
                                                    type: string
                                                type: object
                                            type: object
                                          type: array
                                        replicasCount:
                                          description: how much replicas in each shards for current
                                            ClickHouse cluster will run in Kubernetes, each replica
                                            is a separate `StatefulSet` which contains only one
                                            `Pod` with `clickhouse-server` instance, every shard
                                            contains 1 replica by default
                                          type: integer
                                        shards:
                                          description: optional, allows override top-level `chi.spec.configuration`,
                                            cluster-level `chi.spec.configuration.clusters` settings
                                            for each shard separately, use it only if you fully
                                            understand what you do
                                          items:
                                            properties:
                                              definitionType:
                                                description: DEPRECATED - to be removed soon
                                                type: string
                                              files:
                                                description: |
                                                  optional, allows define content of any setting file inside each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                  override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              internalReplication:
                                                description: |
                                                  optional, `true` by default when `chi.spec.configuration.clusters[].layout.ReplicaCount` > 1 and 0 otherwise
                                                  allows setup <internal_replication> setting which will use during insert into tables with `Distributed` engine for insert only in one live replica and other replicas will download inserted data during replication,
                                                  will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                                  More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                                enum:
                                                - ""
                                                - "0"
                                                - "1"
                                                - "False"
                                                - "false"
                                                - "True"
                                                - "true"
                                                - "No"
                                                - "no"
                                                - "Yes"
                                                - "yes"
                                                - "Off"
                                                - "off"
                                                - "On"
                                                - "on"
                                                - Disable
                                                - disable
                                                - Enable
                                                - enable
                                                - Disabled
                                                - disabled
                                                - Enabled
                                                - enabled
                                                type: string
                                              name:
                                                description: optional, by default shard name is
                                                  generated, but you can override it and setup
                                                  custom name
                                                maxLength: 15
                                                minLength: 1
                                                pattern: ^[a-zA-Z0-9-]{0,15}$
                                                type: string
                                              replicas:
                                                description: |
                                                  optional, allows override behavior for selected replicas from cluster-level `chi.spec.configuration.clusters` and shard-level `chi.spec.configuration.clusters.layout.shards`
                                                items:
                                                  properties:
                                                    files:
                                                      description: |
                                                        optional, allows define content of any setting file inside `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                        override top-level `chi.spec.configuration.files`, cluster-level `chi.spec.configuration.clusters.files` and shard-level `chi.spec.configuration.clusters.layout.shards.files`
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    httpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `http` for selected replica, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                        allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    httpsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    insecure:
                                                      description: |
                                                        optional, open insecure ports for cluster, defaults to "yes"
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    interserverHTTPPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `interserver` for selected replica, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                        allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    name:
                                                      description: optional, by default replica
                                                        name is generated, but you can override
                                                        it and setup custom name
                                                      maxLength: 15
                                                      minLength: 1
                                                      pattern: ^[a-zA-Z0-9-]{0,15}$
                                                      type: string
                                                    secure:
                                                      description: |
                                                        optional, open secure ports
                                                      enum:
                                                      - ""
                                                      - "0"
                                                      - "1"
                                                      - "False"
                                                      - "false"
                                                      - "True"
                                                      - "true"
                                                      - "No"
                                                      - "no"
                                                      - "Yes"
                                                      - "yes"
                                                      - "Off"
                                                      - "off"
                                                      - "On"
                                                      - "on"
                                                      - Disable
                                                      - disable
                                                      - Enable
                                                      - enable
                                                      - Disabled
                                                      - disabled
                                                      - Enabled
                                                      - enabled
                                                      type: string
                                                    settings:
                                                      description: |
                                                        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and shard-level `chi.spec.configuration.clusters.layout.shards.settings`
                                                        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    tcpPort:
                                                      description: |
                                                        optional, setup `Pod.spec.containers.ports` with name `tcp` for selected replica, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                        allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                    templates:
                                                      description: |
                                                        optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                        override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates` and shard-level `chi.spec.configuration.clusters.layout.shards.templates`
                                                      properties:
                                                        clusterServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        dataVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse data directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        hostTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.hostTemplates,
                                                            which will apply to configure every
                                                            `clickhouse-server` instance during
                                                            render ConfigMap resources which will
                                                            mount into `Pod`
                                                          type: string
                                                        logVolumeClaimTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.volumeClaimTemplates,
                                                            allows customization each `PVC` which
                                                            will mount for clickhouse log directory
                                                            in each `Pod` during render and reconcile
                                                            every StatefulSet.spec resource described
                                                            in `chi.spec.configuration.clusters`
                                                          type: string
                                                        podTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.podTemplates,
                                                            allows customization each `Pod` resource
                                                            during render and reconcile each StatefulSet.spec
                                                            resource described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        replicaServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each replica inside each
                                                            shard inside each clickhouse cluster
                                                            described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        serviceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for one `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover all clusters in whole
                                                            `chi` resource
                                                          type: string
                                                        shardServiceTemplate:
                                                          description: optional, template name
                                                            from chi.spec.templates.serviceTemplates,
                                                            allows customization for each `Service`
                                                            resource which will created by `clickhouse-operator`
                                                            which cover each shard inside clickhouse
                                                            cluster described in `chi.spec.configuration.clusters`
                                                          type: string
                                                        volumeClaimTemplate:
                                                          description: DEPRECATED! VolumeClaimTemplate
                                                            is deprecated in favor of DataVolumeClaimTemplate
                                                            and LogVolumeClaimTemplate
                                                          type: string
                                                      type: object
                                                    tlsPort:
                                                      maximum: 65535
                                                      minimum: 1
                                                      type: integer
                                                  type: object
                                                type: array
                                              replicasCount:
                                                description: |
                                                  optional, how much replicas in selected shard for selected ClickHouse cluster will run in Kubernetes, each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
                                                  shard contains 1 replica by default
                                                  override cluster-level `chi.spec.configuration.clusters.layout.replicasCount`
                                                minimum: 1
                                                type: integer
                                              settings:
                                                description: |
                                                  optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                                  override top-level `chi.spec.configuration.settings` and cluster-level `chi.spec.configuration.clusters.settings`
                                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              templates:
                                                description: |
                                                  optional, configuration of the templates names which will use for generate Kubernetes resources according to selected shard
                                                  override top-level `chi.spec.configuration.templates` and cluster-level `chi.spec.configuration.clusters.templates`
                                                properties:
                                                  clusterServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  dataVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse data directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  hostTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.hostTemplates, which
                                                      will apply to configure every `clickhouse-server`
                                                      instance during render ConfigMap resources
                                                      which will mount into `Pod`
                                                    type: string
                                                  logVolumeClaimTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.volumeClaimTemplates,
                                                      allows customization each `PVC` which will
                                                      mount for clickhouse log directory in each
                                                      `Pod` during render and reconcile every
                                                      StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  podTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.podTemplates, allows
                                                      customization each `Pod` resource during
                                                      render and reconcile each StatefulSet.spec
                                                      resource described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  replicaServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each replica inside each shard
                                                      inside each clickhouse cluster described
                                                      in `chi.spec.configuration.clusters`
                                                    type: string
                                                  serviceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for one `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover all clusters in whole `chi`
                                                      resource
                                                    type: string
                                                  shardServiceTemplate:
                                                    description: optional, template name from
                                                      chi.spec.templates.serviceTemplates, allows
                                                      customization for each `Service` resource
                                                      which will created by `clickhouse-operator`
                                                      which cover each shard inside clickhouse
                                                      cluster described in `chi.spec.configuration.clusters`
                                                    type: string
                                                  volumeClaimTemplate:
                                                    description: DEPRECATED! VolumeClaimTemplate
                                                      is deprecated in favor of DataVolumeClaimTemplate
                                                      and LogVolumeClaimTemplate
                                                    type: string
                                                type: object
                                              weight:
                                                description: |
                                                  optional, 1 by default, allows setup shard <weight> setting which will use during insert into tables with `Distributed` engine,
                                                  will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                                  More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                                type: integer
                                            type: object
                                          type: array
                                        shardsCount:
                                          description: how much shards for current ClickHouse
                                            cluster will run in Kubernetes, each shard contains
                                            shared-nothing part of data and contains set of replicas,
                                            cluster contains 1 shard by default
                                          type: integer
                                        type:
                                          description: DEPRECATED - to be removed soon
                                          type: string
                                      type: object
                                    name:
                                      description: cluster name, used to identify set of ClickHouse
                                        servers and wide used during generate names of related
                                        Kubernetes resources
                                      maxLength: 15
                                      minLength: 1
                                      pattern: ^[a-zA-Z0-9-]{0,15}$
                                      type: string
                                    schemaPolicy:
                                      description: |
                                        describes how schema is propagated within replicas and shards
                                      properties:
                                        replica:
                                          description: how schema is propagated within a replica
                                          enum:
                                          - ""
                                          - None
                                          - All
                                          type: string
                                        shard:
                                          description: how schema is propagated between shards
                                          enum:
                                          - ""
                                          - None
                                          - All
                                          - DistributedTablesOnly
                                          type: string
                                      type: object
                                    secret:
                                      description: optional, shared secret value to secure cluster
                                        communications
                                      properties:
                                        auto:
                                          description: Auto-generate shared secret value to secure
                                            cluster communications
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                        value:
                                          description: Cluster shared secret value in plain text
                                          type: string
                                        valueFrom:
                                          description: Cluster shared secret source
                                          properties:
                                            secretKeyRef:
                                              description: |
                                                Selects a key of a secret in the clickhouse installation namespace.
                                                Should not be used if value is not empty.
                                              properties:
                                                key:
                                                  description: The key of the secret to select
                                                    from. Must be a valid secret key.
                                                  type: string
                                                name:
                                                  description: |
                                                    Name of the referent. More info:
                                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret or its
                                                    key must be defined
                                                  type: boolean
                                              required:
                                              - name
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    secure:
                                      description: optional, open secure ports for cluster
                                      enum:
                                      - ""
                                      - "0"
                                      - "1"
                                      - "False"
                                      - "false"
                                      - "True"
                                      - "true"
                                      - "No"
                                      - "no"
                                      - "Yes"
                                      - "yes"
                                      - "Off"
                                      - "off"
                                      - "On"
                                      - "on"
                                      - Disable
                                      - disable
                                      - Enable
                                      - enable
                                      - Disabled
                                      - disabled
                                      - Enabled
                                      - enabled
                                      type: string
                                    settings:
                                      description: |
                                        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                        override top-level `chi.spec.configuration.settings`
                                        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    templates:
                                      description: |
                                        optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
                                        override top-level `chi.spec.configuration.templates`
                                      properties:
                                        clusterServiceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for each `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            each clickhouse cluster described in `chi.spec.configuration.clusters`
                                          type: string
                                        dataVolumeClaimTemplate:
                                          description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                            allows customization each `PVC` which will mount for
                                            clickhouse data directory in each `Pod` during render
                                            and reconcile every StatefulSet.spec resource described
                                            in `chi.spec.configuration.clusters`
                                          type: string
                                        hostTemplate:
                                          description: optional, template name from chi.spec.templates.hostTemplates,
                                            which will apply to configure every `clickhouse-server`
                                            instance during render ConfigMap resources which will
                                            mount into `Pod`
                                          type: string
                                        logVolumeClaimTemplate:
                                          description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                            allows customization each `PVC` which will mount for
                                            clickhouse log directory in each `Pod` during render
                                            and reconcile every StatefulSet.spec resource described
                                            in `chi.spec.configuration.clusters`
                                          type: string
                                        podTemplate:
                                          description: optional, template name from chi.spec.templates.podTemplates,
                                            allows customization each `Pod` resource during render
                                            and reconcile each StatefulSet.spec resource described
                                            in `chi.spec.configuration.clusters`
                                          type: string
                                        replicaServiceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for each `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            each replica inside each shard inside each clickhouse
                                            cluster described in `chi.spec.configuration.clusters`
                                          type: string
                                        serviceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for one `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            all clusters in whole `chi` resource
                                          type: string
                                        shardServiceTemplate:
                                          description: optional, template name from chi.spec.templates.serviceTemplates,
                                            allows customization for each `Service` resource which
                                            will created by `clickhouse-operator` which cover
                                            each shard inside clickhouse cluster described in
                                            `chi.spec.configuration.clusters`
                                          type: string
                                        volumeClaimTemplate:
                                          description: DEPRECATED! VolumeClaimTemplate is deprecated
                                            in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
                                          type: string
                                      type: object
                                    zookeeper:
                                      description: |
                                        optional, allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` only in current ClickHouse cluster, during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                                        override top-level `chi.spec.configuration.zookeeper` settings
                                      properties:
                                        identity:
                                          description: optional access credentials string with
                                            `user:password` format used when use digest authorization
                                            in Zookeeper
                                          type: string
                                        nodes:
                                          description: describe every available zookeeper cluster
                                            node for interaction
                                          items:
                                            properties:
                                              host:
                                                description: dns name or ip address for Zookeeper
                                                  node
                                                type: string
                                              port:
                                                description: TCP port which used to connect to
                                                  Zookeeper node
                                                maximum: 65535
                                                minimum: 0
                                                type: integer
                                              secure:
                                                description: if a secure connection to Zookeeper
                                                  is required
                                                enum:
                                                - ""
                                                - "0"
                                                - "1"
                                                - "False"
                                                - "false"
                                                - "True"
                                                - "true"
                                                - "No"
                                                - "no"
                                                - "Yes"
                                                - "yes"
                                                - "Off"
                                                - "off"
                                                - "On"
                                                - "on"
                                                - Disable
                                                - disable
                                                - Enable
                                                - enable
                                                - Disabled
                                                - disabled
                                                - Enabled
                                                - enabled
                                                type: string
                                            type: object
                                          type: array
                                        operation_timeout_ms:
                                          description: one operation timeout during Zookeeper
                                            transactions
                                          type: integer
                                        root:
                                          description: optional root znode path inside zookeeper
                                            to store ClickHouse related data (replication queue
                                            or distributed DDL)
                                          type: string
                                        session_timeout_ms:
                                          description: session timeout during connect to Zookeeper
                                          type: integer
                                      type: object
                                  type: object
                                type: array
                              files:
                                description: |
                                  allows define content of any setting file inside each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                  every key in this object is the file name
                                  every value in this object is the file content
                                  you can use `!!binary |` and base64 for binary files, see details here https://yaml.org/type/binary.html
                                  each key could contains prefix like USERS, COMMON, HOST or config.d, users.d, cond.d, wrong prefixes will ignored, subfolders also will ignored
                                  More details: https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/05-settings-05-files-nested.yaml
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              profiles:
                                description: |
                                  allows configure <yandex><profiles>..</profiles></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                                  you can configure any aspect of settings profile
                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings-profiles/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationprofiles
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              quotas:
                                description: |
                                  allows configure <yandex><quotas>..</quotas></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                                  you can configure any aspect of resource quotas
                                  More details: https://clickhouse.tech/docs/en/operations/quotas/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationquotas
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              settings:
                                description: |
                                  allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationsettings
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              users:
                                description: |
                                  allows configure <yandex><users>..</users></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                                  you can configure password hashed, authorization restrictions, database level security row filters etc.
                                  More details: https://clickhouse.tech/docs/en/operations/settings/settings-users/
                                  Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationusers
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              zookeeper:
                                description: |
                                  allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                                  `clickhouse-operator` itself doesn't manage Zookeeper, please install Zookeeper separatelly look examples on https://github.com/Altinity/clickhouse-operator/tree/master/deploy/zookeeper/
                                  currently, zookeeper (or clickhouse-keeper replacement) used for *ReplicatedMergeTree table engines and for `distributed_ddl`
                                  More details: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings_zookeeper
                                properties:
                                  identity:
                                    description: optional access credentials string with `user:password`
                                      format used when use digest authorization in Zookeeper
                                    type: string
                                  nodes:
                                    description: describe every available zookeeper cluster node
                                      for interaction
                                    items:
                                      properties:
                                        host:
                                          description: dns name or ip address for Zookeeper node
                                          type: string
                                        port:
                                          description: TCP port which used to connect to Zookeeper
                                            node
                                          maximum: 65535
                                          minimum: 0
                                          type: integer
                                        secure:
                                          description: if a secure connection to Zookeeper is
                                            required
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                      type: object
                                    type: array
                                  operation_timeout_ms:
                                    description: one operation timeout during Zookeeper transactions
                                    type: integer
                                  root:
                                    description: optional root znode path inside zookeeper to
                                      store ClickHouse related data (replication queue or distributed
                                      DDL)
                                    type: string
                                  session_timeout_ms:
                                    description: session timeout during connect to Zookeeper
                                    type: integer
                                type: object
                            type: object
                          defaults:
                            description: |
                              define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
                              More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
                            properties:
                              distributedDDL:
                                description: |
                                  allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
                                  More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
                                properties:
                                  profile:
                                    description: Settings from this profile will be used to execute
                                      DDL queries
                                    type: string
                                type: object
                              replicasUseFQDN:
                                description: |
                                  define should replicas be specified by FQDN in `<host></host>`.
                                  In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
                                  "yes" by default
                                enum:
                                - ""
                                - "0"
                                - "1"
                                - "False"
                                - "false"
                                - "True"
                                - "true"
                                - "No"
                                - "no"
                                - "Yes"
                                - "yes"
                                - "Off"
                                - "off"
                                - "On"
                                - "on"
                                - Disable
                                - disable
                                - Enable
                                - enable
                                - Disabled
                                - disabled
                                - Enabled
                                - enabled
                                type: string
                              storageManagement:
                                description: default storage management options
                                properties:
                                  provisioner:
                                    description: defines `PVC` provisioner - be it StatefulSet
                                      or the Operator
                                    enum:
                                    - ""
                                    - StatefulSet
                                    - Operator
                                    type: string
                                  reclaimPolicy:
                                    description: |
                                      defines behavior of `PVC` deletion.
                                      `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
                                    enum:
                                    - ""
                                    - Retain
                                    - Delete
                                    type: string
                                type: object
                              templates:
                                description: optional, configuration of the templates names which
                                  will use for generate Kubernetes resources according to one
                                  or more ClickHouse clusters described in current ClickHouseInstallation
                                  (chi) resource
                                properties:
                                  clusterServiceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for each `Service` resource which will
                                      created by `clickhouse-operator` which cover each clickhouse
                                      cluster described in `chi.spec.configuration.clusters`
                                    type: string
                                  dataVolumeClaimTemplate:
                                    description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                      allows customization each `PVC` which will mount for clickhouse
                                      data directory in each `Pod` during render and reconcile
                                      every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                    type: string
                                  hostTemplate:
                                    description: optional, template name from chi.spec.templates.hostTemplates,
                                      which will apply to configure every `clickhouse-server`
                                      instance during render ConfigMap resources which will mount
                                      into `Pod`
                                    type: string
                                  logVolumeClaimTemplate:
                                    description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                      allows customization each `PVC` which will mount for clickhouse
                                      log directory in each `Pod` during render and reconcile
                                      every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                    type: string
                                  podTemplate:
                                    description: optional, template name from chi.spec.templates.podTemplates,
                                      allows customization each `Pod` resource during render and
                                      reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
                                    type: string
                                  replicaServiceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for each `Service` resource which will
                                      created by `clickhouse-operator` which cover each replica
                                      inside each shard inside each clickhouse cluster described
                                      in `chi.spec.configuration.clusters`
                                    type: string
                                  serviceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for one `Service` resource which will
                                      created by `clickhouse-operator` which cover all clusters
                                      in whole `chi` resource
                                    type: string
                                  shardServiceTemplate:
                                    description: optional, template name from chi.spec.templates.serviceTemplates,
                                      allows customization for each `Service` resource which will
                                      created by `clickhouse-operator` which cover each shard
                                      inside clickhouse cluster described in `chi.spec.configuration.clusters`
                                    type: string
                                  volumeClaimTemplate:
                                    description: DEPRECATED! VolumeClaimTemplate is deprecated
                                      in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
                                    type: string
                                type: object
                            type: object
                          namespaceDomainPattern:
                            description: |
                              Custom domain pattern which will be used for DNS names of `Service` or `Pod`.
                              Typical use scenario - custom cluster domain in Kubernetes cluster
                              Example: %s.svc.my.test
                            type: string
                          reconciling:
                            description: optional, allows tuning reconciling cycle for ClickhouseInstallation
                              from clickhouse-operator side
                            properties:
                              cleanup:
                                description: optional, define behavior for cleanup Kubernetes
                                  resources during reconcile cycle
                                properties:
                                  reconcileFailedObjects:
                                    description: what clickhouse-operator shall do when reconciling
                                      Kubernetes resources are failed, default behavior is `Retain`
                                    properties:
                                      configMap:
                                        description: behavior policy for failed ConfigMap reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      pvc:
                                        description: behavior policy for failed PVC reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      service:
                                        description: behavior policy for failed Service reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      statefulSet:
                                        description: behavior policy for failed StatefulSet reconciling,
                                          Retain by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                    type: object
                                  unknownObjects:
                                    description: what clickhouse-operator shall do when found
                                      Kubernetes resources which should be managed with clickhouse-operator,
                                      but not have `ownerReference` to any currently managed `ClickHouseInstallation`
                                      resource, default behavior is `Delete`
                                    properties:
                                      configMap:
                                        description: behavior policy for unknown ConfigMap, Delete
                                          by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      pvc:
                                        description: behavior policy for unknown PVC, Delete by
                                          default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      service:
                                        description: behavior policy for unknown Service, Delete
                                          by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                      statefulSet:
                                        description: behavior policy for unknown StatefulSet,
                                          Delete by default
                                        enum:
                                        - ""
                                        - Retain
                                        - Delete
                                        type: string
                                    type: object
                                type: object
                              configMapPropagationTimeout:
                                description: |
                                  Timeout in seconds for `clickhouse-operator` to wait for modified `ConfigMap` to propagate into the `Pod`
                                  More details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
                                maximum: 3600
                                minimum: 0
                                type: integer
                              policy:
                                description: DEPRECATED
                                type: string
                            type: object
                          restart:
                            description: |
                              In case 'RollingUpdate' specified, the operator will always restart ClickHouse pods during reconcile.
                              This options is used in rare cases when force restart is required and is typically removed after the use in order to avoid unneeded restarts.
                            enum:
                            - ""
                            - RollingUpdate
                            type: string
                          stop:
                            description: |
                              Allows to stop all ClickHouse clusters defined in a CHI.
                              Works as the following:
                               - When `stop` is `1` operator sets `Replicas: 0` in each StatefulSet. Thie leads to having all `Pods` and `Service` deleted. All PVCs are kept intact.
                               - When `stop` is `0` operator sets `Replicas: 1` and `Pod`s and `Service`s will created again and all retained PVCs will be attached to `Pod`s.
                            enum:
                            - ""
                            - "0"
                            - "1"
                            - "False"
                            - "false"
                            - "True"
                            - "true"
                            - "No"
                            - "no"
                            - "Yes"
                            - "yes"
                            - "Off"
                            - "off"
                            - "On"
                            - "on"
                            - Disable
                            - disable
                            - Enable
                            - enable
                            - Disabled
                            - disabled
                            - Enabled
                            - enabled
                            type: string
                          taskID:
                            description: |
                              Allows to define custom taskID for CHI update and watch status of this update execution.
                              Displayed in all .status.taskID* fields.
                              By default (if not filled) every update of CHI manifest will generate random taskID
                            type: string
                          templates:
                            description: allows define templates which will use for render Kubernetes
                              resources like StatefulSet, ConfigMap, Service, PVC, by default,
                              clickhouse-operator have own templates, but you can override it
                            properties:
                              hostTemplates:
                                description: hostTemplate will use during apply to generate `clickhose-server`
                                  config files
                                items:
                                  properties:
                                    name:
                                      description: template name, could use to link inside top-level
                                        `chi.spec.defaults.templates.hostTemplate`, cluster-level
                                        `chi.spec.configuration.clusters.templates.hostTemplate`,
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`,
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
                                      type: string
                                    portDistribution:
                                      description: define how will distribute numeric values of
                                        named ports in `Pod.spec.containers.ports` and clickhouse-server
                                        configs
                                      items:
                                        properties:
                                          type:
                                            description: type of distribution, when `Unspecified`
                                              (default value) then all listen ports on clickhouse-server
                                              configuration in all Pods will have the same value,
                                              when `ClusterScopeIndex` then ports will increment
                                              to offset from base value depends on shard and replica
                                              index inside cluster with combination of `chi.spec.templates.podTemlates.spec.HostNetwork`
                                              it allows setup ClickHouse cluster inside Kubernetes
                                              and provide access via external network bypass Kubernetes
                                              internal network
                                            enum:
                                            - ""
                                            - Unspecified
                                            - ClusterScopeIndex
                                            type: string
                                        type: object
                                      type: array
                                    spec:
                                      properties:
                                        files:
                                          description: |
                                            optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        httpPort:
                                          description: |
                                            optional, setup `http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                            if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=http]`
                                            More info: https://clickhouse.tech/docs/en/interfaces/http/
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        httpsPort:
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        insecure:
                                          description: |
                                            optional, open insecure ports for cluster, defaults to "yes"
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                        interserverHTTPPort:
                                          description: |
                                            optional, setup `interserver_http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                            if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=interserver]`
                                            More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#interserver-http-port
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        name:
                                          description: by default, hostname will generate, but
                                            this allows define custom name for each `clickhuse-server`
                                          maxLength: 15
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]{0,15}$
                                          type: string
                                        secure:
                                          description: |
                                            optional, open secure ports
                                          enum:
                                          - ""
                                          - "0"
                                          - "1"
                                          - "False"
                                          - "false"
                                          - "True"
                                          - "true"
                                          - "No"
                                          - "no"
                                          - "Yes"
                                          - "yes"
                                          - "Off"
                                          - "off"
                                          - "On"
                                          - "on"
                                          - Disable
                                          - disable
                                          - Enable
                                          - enable
                                          - Disabled
                                          - disabled
                                          - Enabled
                                          - enabled
                                          type: string
                                        settings:
                                          description: |
                                            optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                            More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        tcpPort:
                                          description: |
                                            optional, setup `tcp_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                            if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=tcp]`
                                            More info: https://clickhouse.tech/docs/en/interfaces/tcp/
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        templates:
                                          description: be careful, this part of CRD allows override
                                            template inside template, don't use it if you don't
                                            understand what you do
                                          properties:
                                            clusterServiceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for each `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover each clickhouse cluster described in `chi.spec.configuration.clusters`
                                              type: string
                                            dataVolumeClaimTemplate:
                                              description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                                allows customization each `PVC` which will mount
                                                for clickhouse data directory in each `Pod` during
                                                render and reconcile every StatefulSet.spec resource
                                                described in `chi.spec.configuration.clusters`
                                              type: string
                                            hostTemplate:
                                              description: optional, template name from chi.spec.templates.hostTemplates,
                                                which will apply to configure every `clickhouse-server`
                                                instance during render ConfigMap resources which
                                                will mount into `Pod`
                                              type: string
                                            logVolumeClaimTemplate:
                                              description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                                allows customization each `PVC` which will mount
                                                for clickhouse log directory in each `Pod` during
                                                render and reconcile every StatefulSet.spec resource
                                                described in `chi.spec.configuration.clusters`
                                              type: string
                                            podTemplate:
                                              description: optional, template name from chi.spec.templates.podTemplates,
                                                allows customization each `Pod` resource during
                                                render and reconcile each StatefulSet.spec resource
                                                described in `chi.spec.configuration.clusters`
                                              type: string
                                            replicaServiceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for each `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover each replica inside each shard inside each
                                                clickhouse cluster described in `chi.spec.configuration.clusters`
                                              type: string
                                            serviceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for one `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover all clusters in whole `chi` resource
                                              type: string
                                            shardServiceTemplate:
                                              description: optional, template name from chi.spec.templates.serviceTemplates,
                                                allows customization for each `Service` resource
                                                which will created by `clickhouse-operator` which
                                                cover each shard inside clickhouse cluster described
                                                in `chi.spec.configuration.clusters`
                                              type: string
                                            volumeClaimTemplate:
                                              description: DEPRECATED! VolumeClaimTemplate is
                                                deprecated in favor of DataVolumeClaimTemplate
                                                and LogVolumeClaimTemplate
                                              type: string
                                          type: object
                                        tlsPort:
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      type: object
                                  type: object
                                type: array
                              podTemplates:
                                description: |
                                  podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
                                  More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
                                items:
                                  properties:
                                    distribution:
                                      description: DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                                      enum:
                                      - ""
                                      - Unspecified
                                      - OnePerHost
                                      type: string
                                    generateName:
                                      description: allows define format for generated `Pod` name,
                                        look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                        for details about aviailable template variables
                                      type: string
                                    metadata:
                                      description: |
                                        allows pass standard object's metadata from template to Pod
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: template name, could use to link inside top-level
                                        `chi.spec.defaults.templates.podTemplate`, cluster-level
                                        `chi.spec.configuration.clusters.templates.podTemplate`,
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`,
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
                                      type: string
                                    podDistribution:
                                      description: define ClickHouse Pod distribution policy between
                                        Kubernetes Nodes inside Shard, Replica, Namespace, CHI,
                                        another ClickHouse cluster
                                      items:
                                        properties:
                                          number:
                                            description: define, how much ClickHouse Pods could
                                              be inside selected scope with selected distribution
                                              type
                                            maximum: 65535
                                            minimum: 0
                                            type: integer
                                          scope:
                                            description: scope for apply each podDistribution
                                            enum:
                                            - ""
                                            - Unspecified
                                            - Shard
                                            - Replica
                                            - Cluster
                                            - ClickHouseInstallation
                                            - Namespace
                                            type: string
                                          topologyKey:
                                            description: 'use for inter-pod affinity look to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
                                              More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity'
                                            type: string
                                          type:
                                            description: you can define multiple affinity policy
                                              types
                                            enum:
                                            - ""
                                            - Unspecified
                                            - ClickHouseAntiAffinity
                                            - ShardAntiAffinity
                                            - ReplicaAntiAffinity
                                            - AnotherNamespaceAntiAffinity
                                            - AnotherClickHouseInstallationAntiAffinity
                                            - AnotherClusterAntiAffinity
                                            - MaxNumberPerNode
                                            - NamespaceAffinity
                                            - ClickHouseInstallationAffinity
                                            - ClusterAffinity
                                            - ShardAffinity
                                            - ReplicaAffinity
                                            - PreviousTailAffinity
                                            - CircularReplication
                                            type: string
                                        type: object
                                      type: array
                                    spec:
                                      description: allows define whole Pod.spec inside StaefulSet.spec,
                                        look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
                                        for details
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    zone:
                                      description: allows define custom zone name and will separate
                                        ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                                      properties:
                                        key:
                                          description: optional, if defined, allows select kubernetes
                                            nodes by label with `name` equal `key`
                                          type: string
                                        values:
                                          description: optional, if defined, allows select kubernetes
                                            nodes by label with `value` in `values`
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                  type: object
                                type: array
                              serviceTemplates:
                                description: |
                                  allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
                                items:
                                  properties:
                                    generateName:
                                      description: allows define format for generated `Service`
                                        name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                        for details about aviailable template variables
                                      type: string
                                    metadata:
                                      description: |
                                        allows pass standard object's metadata from template to Service
                                        Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
                                        More info: https://kubernetes.io/docs/concepts/services-networking/service/
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: |
                                        template name, could use to link inside
                                        chi-level `chi.spec.defaults.templates.serviceTemplate`
                                        cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
                                      type: string
                                    spec:
                                      description: |
                                        describe behavior of generated Service
                                        More info: https://kubernetes.io/docs/concepts/services-networking/service/
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              volumeClaimTemplates:
                                description: allows define template for rendering `PVC` kubernetes
                                  resource, which would use inside `Pod` for mount clickhouse
                                  `data`, clickhouse `logs` or something else
                                items:
                                  properties:
                                    metadata:
                                      description: |
                                        allows to pass standard object's metadata from template to PVC
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: |
                                        template name, could use to link inside
                                        top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
                                        cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
                                        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
                                        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
                                      type: string
                                    provisioner:
                                      description: defines `PVC` provisioner - be it StatefulSet
                                        or the Operator
                                      enum:
                                      - ""
                                      - StatefulSet
                                      - Operator
                                      type: string
                                    reclaimPolicy:
                                      description: |
                                        defines behavior of `PVC` deletion.
                                        `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
                                      enum:
                                      - ""
                                      - Retain
                                      - Delete
                                      type: string
                                    spec:
                                      description: |
                                        allows define all aspects of `PVC` resource
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                            type: object
                          templating:
                            description: Optional, defines policy for applying current ClickHouseInstallationTemplate
                              to ClickHouseInstallation(s)
                            properties:
                              chiSelector:
                                description: Optional, defines selector for ClickHouseInstallation(s)
                                  to be templated with ClickhouseInstallationTemplate
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              policy:
                                description: |
                                  When defined as `auto` inside ClickhouseInstallationTemplate, this ClickhouseInstallationTemplate
                                  will be auto-added into ClickHouseInstallation, selectable by `chiSelector`.
                                  Default value is `manual`, meaning ClickHouseInstallation should request this ClickhouseInstallationTemplate explicitly.
                                enum:
                                - ""
                                - auto
                                - manual
                                type: string
                            type: object
                          troubleshoot:
                            description: |
                              Allows to troubleshoot Pods during CrashLoopBack state.
                              This may happen when wrong configuration applied, in this case `clickhouse-server` wouldn't start.
                              Command within ClickHouse container is modified with `sleep` in order to avoid quick restarts
                              and give time to troubleshoot via CLI.
                              Liveness and Readiness probes are disabled as well.
                            enum:
                            - ""
                            - "0"
                            - "1"
                            - "False"
                            - "false"
                            - "True"
                            - "true"
                            - "No"
                            - "no"
                            - "Yes"
                            - "yes"
                            - "Off"
                            - "off"
                            - "On"
                            - "on"
                            - Disable
                            - disable
                            - Enable
                            - enable
                            - Disabled
                            - disabled
                            - Enabled
                            - enabled
                            type: string
                          useTemplates:
                            description: list of `ClickHouseInstallationTemplate` (chit) resource
                              names which will merge with current `Chi` manifest during render
                              Kubernetes resources to create related ClickHouse clusters
                            items:
                              properties:
                                name:
                                  description: name of `ClickHouseInstallationTemplate` (chit)
                                    resource
                                  type: string
                                namespace:
                                  description: Kubernetes namespace where need search `chit` resource,
                                    depending on `watchNamespaces` settings in `clichouse-operator`
                                  type: string
                                useType:
                                  description: optional, current strategy is only merge, and current
                                    `chi` settings have more priority than merged template `chit`
                                  enum:
                                  - ""
                                  - merge
                                  type: string
                              type: object
                            type: array
                        type: object
                      status:
                        description: Current ClickHouseInstallation manifest status, contains
                          many fields like a normalized configuration, clickhouse-operator version,
                          current action and all applied action list, current taskID and all applied
                          taskIDs and other
                        properties:
                          action:
                            description: Action
                            type: string
                          actions:
                            description: Actions
                            items:
                              type: string
                            nullable: true
                            type: array
                          chop-commit:
                            description: ClickHouse operator git commit SHA
                            type: string
                          chop-date:
                            description: ClickHouse operator build date
                            type: string
                          chop-ip:
                            description: IP address of the operator's pod which managed this CHI
                            type: string
                          chop-version:
                            description: ClickHouse operator version
                            type: string
                          clusters:
                            description: Clusters count
                            minimum: 0
                            type: integer
                          endpoint:
                            description: Endpoint
                            type: string
                          error:
                            description: Last error
                            type: string
                          errors:
                            description: Errors
                            items:
                              type: string
                            nullable: true
                            type: array
                          fqdns:
                            description: Pods FQDNs
                            items:
                              type: string
                            nullable: true
                            type: array
                          generation:
                            description: Generation
                            minimum: 0
                            type: integer
                          hosts:
                            description: Hosts count
                            minimum: 0
                            type: integer
                          hostsAdded:
                            description: Added Hosts count
                            minimum: 0
                            type: integer
                          hostsCompleted:
                            description: Completed Hosts count
                            minimum: 0
                            type: integer
                          hostsDelete:
                            description: About to delete Hosts count
                            minimum: 0
                            type: integer
                          hostsDeleted:
                            description: Deleted Hosts count
                            minimum: 0
                            type: integer
                          hostsUpdated:
                            description: Updated Hosts count
                            minimum: 0
                            type: integer
                          hostsWithTablesCreated:
                            description: List of hosts with tables created by the operator
                            items:
                              type: string
                            nullable: true
                            type: array
                          normalized:
                            description: Normalized CHI requested
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          normalizedCompleted:
                            description: Normalized CHI completed
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          pod-ips:
                            description: Pod IPs
                            items:
                              type: string
                            nullable: true
                            type: array
                          pods:
                            description: Pods
                            items:
                              type: string
                            nullable: true
                            type: array
                          replicas:
                            description: Replicas count
                            minimum: 0
                            type: integer
                          shards:
                            description: Shards count
                            minimum: 0
                            type: integer
                          status:
                            description: Status
                            type: string
                          taskID:
                            description: Current task id
                            type: string
                          taskIDsCompleted:
                            description: Completed task ids
                            items:
                              type: string
                            nullable: true
                            type: array
                          taskIDsStarted:
                            description: Started task ids
                            items:
                              type: string
                            nullable: true
                            type: array
                          usedTemplates:
                            description: List of templates used to build this CHI
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nullable: true
                            type: array
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    required:
                    - spec
                    type: object
                served: true
                storage: true
                subresources:
                  status: {}
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["f8c592ae496ad7a24f48cc7a034d4a941a69d524"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "ConfigMap"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "etc-clickhouse-operator-files"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            data:
              config.yaml: |
                # IMPORTANT
                # This file is auto-generated
                # Do not edit this file - all changes would be lost
                # Edit appropriate template in the following folder:
                # deploy/builder/templates-config
                # IMPORTANT
                #
                # Template parameters available:
                #   WATCH_NAMESPACES=
                #   CH_USERNAME_PLAIN=
                #   CH_PASSWORD_PLAIN=
                #   CH_CREDENTIALS_SECRET_NAMESPACE=
                #   CH_CREDENTIALS_SECRET_NAME=clickhouse-operator
            
                ################################################
                ##
                ## Watch section
                ##
                ################################################
                watch:
                  # List of namespaces where clickhouse-operator watches for events.
                  # Concurrently running operators should watch on different namespaces.
                  # IMPORTANT
                  # Regexp is applicable.
                  #namespaces: ["dev", "test"]
                  namespaces: []
            
                clickhouse:
                  configuration:
                    ################################################
                    ##
                    ## Configuration files section
                    ##
                    ################################################
                    file:
                      path:
                        # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
                        common: config.d
                        # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
                        host: conf.d
                        # Path to the folder where ClickHouse configuration files with users' settings are located.
                        # Files are common for all instances within a CHI.
                        user: users.d
                    ################################################
                    ##
                    ## Configuration users section
                    ##
                    ################################################
                    user:
                      # Default settings for user accounts, created by the operator.
                      # IMPORTANT. These are not access credentials or settings for 'default' user account,
                      # it is a template for filling out missing fields for all user accounts to be created by the operator,
                      # with the following EXCEPTIONS:
                      # 1. 'default' user account DOES NOT use provided password, but uses all the rest of the fields.
                      #    Password for 'default' user account has to be provided explicitly, if to be used.
                      # 2. CHOP user account DOES NOT use:
                      #    - profile setting. It uses predefined profile called 'clickhouse_operator'
                      #    - quota setting. It uses empty quota name.
                      #    - networks IP setting. Operator specifies 'networks/ip' user setting to match operators' pod IP only.
                      #    - password setting. Password for CHOP account is used from 'clickhouse.access.*' section
                      default:
                        # Default values for ClickHouse user account(s) created by the operator
                        #   1. user/profile - string
                        #   2. user/quota - string
                        #   3. user/networks/ip - multiple strings
                        #   4. user/password - string
                        # These values can be overwritten on per-user basis.
                        profile: "default"
                        quota: "default"
                        networksIP:
                          - "::1"
                          - "127.0.0.1"
                        password: "default"
                    ################################################
                    ##
                    ## Configuration network section
                    ##
                    ################################################
                    network:
                      # Default host_regexp to limit network connectivity from outside
                      hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"
            
                  ################################################
                  ##
                  ## Configuration restart policy section
                  ## Configuration restart policy describes what configuration changes require ClickHouse restart
                  ##
                  ################################################
                  configurationRestartPolicy:
                    rules:
                      # IMPORTANT!
                      # Default version will also be used in case ClickHouse version is unknown.
                      # ClickHouse version may be unknown due to host being down - for example, because of incorrect "settings" section.
                      # ClickHouse is not willing to start in case incorrect/unknown settings are provided in config file.
                      - version: "*"
                        rules:
                          - settings/*: "yes"
                          - settings/dictionaries_config: "no"
                          - settings/logger: "no"
                          - settings/macros/*: "no"
                          - settings/max_server_memory_*: "no"
                          - settings/max_*_to_drop: "no"
                          - settings/max_concurrent_queries: "no"
                          - settings/models_config: "no"
                          - settings/user_defined_executable_functions_config: "no"
            
                          - zookeeper/*: "yes"
            
                          - files/*.xml: "yes"
                          - files/config.d/*.xml: "yes"
                          - files/config.d/*dict*.xml: "no"
            
                          - profiles/default/background_*_pool_size: "yes"
                          - profiles/default/max_*_for_server: "yes"
                      - version: "21.*"
                        rules:
                          - settings/logger: "yes"
            
                  #################################################
                  ##
                  ## Access to ClickHouse instances
                  ##
                  ################################################
                  access:
                    # Possible values for 'scheme' are:
                    #   1. http - force http to be used to connect to ClickHouse instances
                    #   2. https - force https to be used to connect to ClickHouse instances
                    #   3. auto - either http or https is selected based on open ports
                    scheme: "auto"
                    # ClickHouse credentials (username, password and port) to be used by the operator to connect to ClickHouse instances.
                    # These credentials are used for:
                    #   1. Metrics requests
                    #   2. Schema maintenance
                    #   3. DROP DNS CACHE
                    # User with these credentials can be specified in additional ClickHouse .xml config files,
                    # located in 'clickhouse.configuration.file.path.user' folder
                    username: "clickhouse_operator"
                    password: "clickhouse_operator_password"
                    rootCA: ""
            
                    # Location of the k8s Secret with username and password to be used by the operator to connect to ClickHouse instances.
                    # Can be used instead of explicitly specified username and password available in sections:
                    #   - clickhouse.access.username
                    #   - clickhouse.access.password
                    # Secret should have two keys:
                    #   1. username
                    #   2. password
                    secret:
                      # Empty `namespace` means that k8s secret would be looked in the same namespace where operator's pod is running.
                      namespace: ""
                      # Empty `name` means no k8s Secret would be looked for
                      name: "clickhouse-operator"
                    # Port where to connect to ClickHouse instances to
                    port: 8123
            
                    # Timeouts used to limit connection and queries from the operator to ClickHouse instances
                    # Specified in seconds.
                    timeouts:
                      # Timout to setup connection from the operator to ClickHouse instances. In seconds.
                      connect: 1
                      # Timout to perform SQL query from the operator to ClickHouse instances. In seconds.
                      query: 4
            
                  #################################################
                  ##
                  ## Metrics collection
                  ##
                  ################################################
            
                  metrics:
                    # Timeouts used to limit connection and queries from the metrics exporter to ClickHouse instances
                    # Specified in seconds.
                    timeouts:
                      # Timeout used to limit metrics collection request. In seconds.
                      # Upon reaching this timeout metrics collection is aborted and no more metrics are collected in this cycle.
                      # All collected metrics are returned.
                      collect: 9
            
                ################################################
                ##
                ## Template(s) management section
                ##
                ################################################
                template:
                  chi:
                    # CHI template updates handling policy
                    # Possible policy values:
                    #   - ReadOnStart. Accept CHIT updates on the operators start only.
                    #   - ApplyOnNextReconcile. Accept CHIT updates at all time. Apply news CHITs on next regular reconcile of the CHI
                    policy: ApplyOnNextReconcile
            
                    # Path to the folder where ClickHouseInstallation templates .yaml manifests are located.
                    # Templates are added to the list of all templates and used when CHI is reconciled.
                    # Templates are applied in sorted alpha-numeric order.
                    path: templates.d
            
                ################################################
                ##
                ## Reconcile section
                ##
                ################################################
                reconcile:
                  # Reconcile runtime settings
                  runtime:
                    # Max number of concurrent CHI reconciles in progress
                    reconcileCHIsThreadsNumber: 10
            
                    # The operator reconciles shards concurrently in each CHI with the following limitations:
                    #   1. Number of shards being reconciled (and thus having hosts down) in each CHI concurrently
                    #      can not be greater than 'reconcileShardsThreadsNumber'.
                    #   2. Percentage of shards being reconciled (and thus having hosts down) in each CHI concurrently
                    #      can not be greater than 'reconcileShardsMaxConcurrencyPercent'.
                    #   3. The first shard is always reconciled alone. Concurrency starts from the second shard and onward.
                    # Thus limiting number of shards being reconciled (and thus having hosts down) in each CHI by both number and percentage
            
                    # Max number of concurrent shard reconciles within one CHI in progress
                    reconcileShardsThreadsNumber: 5
                    # Max percentage of concurrent shard reconciles within one CHI in progress
                    reconcileShardsMaxConcurrencyPercent: 50
            
                  # Reconcile StatefulSet scenario
                  statefulSet:
                    # Create StatefulSet scenario
                    create:
                      # What to do in case created StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
                      # Possible options:
                      # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
                      #    do not try to fix or delete or update it, just abort reconcile cycle.
                      #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
                      # 2. delete - delete newly created problematic StatefulSet and follow 'abort' path afterwards.
                      # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
                      onFailure: ignore
            
                    # Update StatefulSet scenario
                    update:
                      # How many seconds to wait for created/updated StatefulSet to be 'Ready'
                      timeout: 300
                      # How many seconds to wait between checks/polls for created/updated StatefulSet status
                      pollInterval: 5
                      # What to do in case updated StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
                      # Possible options:
                      # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
                      #    do not try to fix or delete or update it, just abort reconcile cycle.
                      #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
                      # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
                      #    Pod would be recreated by StatefulSet based on rollback-ed StatefulSet configuration.
                      #    Follow 'abort' path afterwards.
                      # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
                      onFailure: abort
            
                  # Reconcile Host scenario
                  host:
                    # Whether the operator during reconcile procedure should wait for a ClickHouse host:
                    #   - to be excluded from a ClickHouse cluster
                    #   - to complete all running queries
                    #   - to be included into a ClickHouse cluster
                    # respectfully before moving forward
                    wait:
                      exclude: true
                      queries: true
                      include: false
            
                ################################################
                ##
                ## Annotations management section
                ##
                ################################################
                annotation:
                  # Applied when:
                  #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
                  #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
                  # Include annotations from the following list:
                  # Applied only when not empty. Empty list means "include all, no selection"
                  include: []
                  # Exclude annotations from the following list:
                  exclude: []
            
                ################################################
                ##
                ## Labels management section
                ##
                ################################################
                label:
                  # Applied when:
                  #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
                  #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
                  # Include labels from the following list:
                  # Applied only when not empty. Empty list means "include all, no selection"
                  include: []
                  # Exclude labels from the following list:
                  # Applied only when not empty. Empty list means "nothing to exclude, no selection"
                  exclude: []
                  # Whether to append *Scope* labels to StatefulSet and Pod.
                  # Full list of available *scope* labels check in 'labeler.go'
                  #  LabelShardScopeIndex
                  #  LabelReplicaScopeIndex
                  #  LabelCHIScopeIndex
                  #  LabelCHIScopeCycleSize
                  #  LabelCHIScopeCycleIndex
                  #  LabelCHIScopeCycleOffset
                  #  LabelClusterScopeIndex
                  #  LabelClusterScopeCycleSize
                  #  LabelClusterScopeCycleIndex
                  #  LabelClusterScopeCycleOffset
                  appendScope: "no"
            
                ################################################
                ##
                ## StatefulSet management section
                ##
                ################################################
                statefulSet:
                  revisionHistoryLimit: 0
            
                ################################################
                ##
                ## Pod management section
                ##
                ################################################
                pod:
                  # Grace period for Pod termination.
                  # How many seconds to wait between sending
                  # SIGTERM and SIGKILL during Pod termination process.
                  # Increase this number is case of slow shutdown.
                  terminationGracePeriod: 30
            
                ################################################
                ##
                ## Log parameters section
                ##
                ################################################
                logger:
                  logtostderr: "true"
                  alsologtostderr: "false"
                  v: "1"
                  stderrthreshold: ""
                  vmodule: ""
                  log_backtrace_at: ""
            kind: ConfigMap
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: etc-clickhouse-operator-files
              namespace: kube-system
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["fa7ca74dea0fb26698c00613e6e666bbab10d2b1"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "apps/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "Deployment"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouse-operator"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              labels:
                app: clickhouse-operator
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouse-operator
              namespace: kube-system
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: clickhouse-operator
              template:
                metadata:
                  annotations:
                    clickhouse-operator-metrics/port: "9999"
                    clickhouse-operator-metrics/scrape: "true"
                    prometheus.io/port: "8888"
                    prometheus.io/scrape: "true"
                  labels:
                    app: clickhouse-operator
                spec:
                  containers:
                  - env:
                    - name: OPERATOR_POD_NODE_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: spec.nodeName
                    - name: OPERATOR_POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_POD_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: OPERATOR_POD_IP
                      valueFrom:
                        fieldRef:
                          fieldPath: status.podIP
                    - name: OPERATOR_POD_SERVICE_ACCOUNT
                      valueFrom:
                        fieldRef:
                          fieldPath: spec.serviceAccountName
                    - name: OPERATOR_CONTAINER_CPU_REQUEST
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: requests.cpu
                    - name: OPERATOR_CONTAINER_CPU_LIMIT
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: limits.cpu
                    - name: OPERATOR_CONTAINER_MEM_REQUEST
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: requests.memory
                    - name: OPERATOR_CONTAINER_MEM_LIMIT
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: limits.memory
                    image: altinity/clickhouse-operator:0.23.2
                    imagePullPolicy: Always
                    name: clickhouse-operator
                    ports:
                    - containerPort: 9999
                      name: metrics
                    volumeMounts:
                    - mountPath: /etc/clickhouse-operator
                      name: etc-clickhouse-operator-folder
                    - mountPath: /etc/clickhouse-operator/conf.d
                      name: etc-clickhouse-operator-confd-folder
                    - mountPath: /etc/clickhouse-operator/config.d
                      name: etc-clickhouse-operator-configd-folder
                    - mountPath: /etc/clickhouse-operator/templates.d
                      name: etc-clickhouse-operator-templatesd-folder
                    - mountPath: /etc/clickhouse-operator/users.d
                      name: etc-clickhouse-operator-usersd-folder
                  - env:
                    - name: OPERATOR_POD_NODE_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: spec.nodeName
                    - name: OPERATOR_POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_POD_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: OPERATOR_POD_IP
                      valueFrom:
                        fieldRef:
                          fieldPath: status.podIP
                    - name: OPERATOR_POD_SERVICE_ACCOUNT
                      valueFrom:
                        fieldRef:
                          fieldPath: spec.serviceAccountName
                    - name: OPERATOR_CONTAINER_CPU_REQUEST
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: requests.cpu
                    - name: OPERATOR_CONTAINER_CPU_LIMIT
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: limits.cpu
                    - name: OPERATOR_CONTAINER_MEM_REQUEST
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: requests.memory
                    - name: OPERATOR_CONTAINER_MEM_LIMIT
                      valueFrom:
                        resourceFieldRef:
                          containerName: clickhouse-operator
                          resource: limits.memory
                    image: altinity/metrics-exporter:0.23.2
                    imagePullPolicy: Always
                    name: metrics-exporter
                    ports:
                    - containerPort: 8888
                      name: metrics
                    volumeMounts:
                    - mountPath: /etc/clickhouse-operator
                      name: etc-clickhouse-operator-folder
                    - mountPath: /etc/clickhouse-operator/conf.d
                      name: etc-clickhouse-operator-confd-folder
                    - mountPath: /etc/clickhouse-operator/config.d
                      name: etc-clickhouse-operator-configd-folder
                    - mountPath: /etc/clickhouse-operator/templates.d
                      name: etc-clickhouse-operator-templatesd-folder
                    - mountPath: /etc/clickhouse-operator/users.d
                      name: etc-clickhouse-operator-usersd-folder
                  serviceAccountName: clickhouse-operator
                  volumes:
                  - configMap:
                      name: etc-clickhouse-operator-files
                    name: etc-clickhouse-operator-folder
                  - configMap:
                      name: etc-clickhouse-operator-confd-files
                    name: etc-clickhouse-operator-confd-folder
                  - configMap:
                      name: etc-clickhouse-operator-configd-files
                    name: etc-clickhouse-operator-configd-folder
                  - configMap:
                      name: etc-clickhouse-operator-templatesd-files
                    name: etc-clickhouse-operator-templatesd-folder
                  - configMap:
                      name: etc-clickhouse-operator-usersd-files
                    name: etc-clickhouse-operator-usersd-folder
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.clickhouse_operator["fc55321d53103d254137d9056c3ca74660e2e839"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "clickhouse_operator" {
      [32m+[0m[0m api_version             = "apiextensions.k8s.io/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "CustomResourceDefinition"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "clickhouseoperatorconfigurations.clickhouse.altinity.com"
      [32m+[0m[0m namespace               = "kube-system"
      [32m+[0m[0m override_namespace      = "kube-system"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: apiextensions.k8s.io/v1
            kind: CustomResourceDefinition
            metadata:
              labels:
                clickhouse.altinity.com/chop: 0.23.2
              name: clickhouseoperatorconfigurations.clickhouse.altinity.com
              namespace: kube-system
            spec:
              group: clickhouse.altinity.com
              names:
                kind: ClickHouseOperatorConfiguration
                plural: clickhouseoperatorconfigurations
                shortNames:
                - chopconf
                singular: clickhouseoperatorconfiguration
              scope: Namespaced
              versions:
              - additionalPrinterColumns:
                - description: Watch namespaces
                  jsonPath: .status
                  name: namespaces
                  type: string
                - description: Age of the resource
                  jsonPath: .metadata.creationTimestamp
                  name: age
                  type: date
                name: v1
                schema:
                  openAPIV3Schema:
                    description: allows customize `clickhouse-operator` settings, need restart
                      clickhouse-operator pod after adding, more details https://github.com/Altinity/clickhouse-operator/blob/master/docs/operator_configuration.md
                    properties:
                      spec:
                        description: |
                          Allows to define settings of the clickhouse-operator.
                          More info: https://github.com/Altinity/clickhouse-operator/blob/master/config/config.yaml
                          Check into etc-clickhouse-operator* ConfigMaps if you need more control
                        properties:
                          annotation:
                            description: defines which metadata.annotations items will include
                              or exclude during render StatefulSet, Pod, PVC resources
                            properties:
                              exclude:
                                description: |
                                  When propagating labels from the chi's `metadata.annotations` section to child objects' `metadata.annotations`,
                                  exclude annotations with names from the following list
                                items:
                                  type: string
                                type: array
                              include:
                                description: |
                                  When propagating labels from the chi's `metadata.annotations` section to child objects' `metadata.annotations`,
                                  include annotations with names from the following list
                                items:
                                  type: string
                                type: array
                            type: object
                          clickhouse:
                            description: Clickhouse related parameters used by clickhouse-operator
                            properties:
                              access:
                                description: parameters which use for connect to clickhouse from
                                  clickhouse-operator deployment
                                properties:
                                  password:
                                    description: ClickHouse password to be used by operator to
                                      connect to ClickHouse instances, deprecated, use chCredentialsSecretName
                                    type: string
                                  port:
                                    description: Port to be used by operator to connect to ClickHouse
                                      instances
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  rootCA:
                                    description: Root certificate authority that clients use when
                                      verifying server certificates. Used for https connection
                                      to ClickHouse
                                    type: string
                                  scheme:
                                    description: 'The scheme to user for connecting to ClickHouse.
                                      Possible values: http, https, auto'
                                    type: string
                                  secret:
                                    properties:
                                      name:
                                        description: Name of k8s Secret with username and password
                                          to be used by operator to connect to ClickHouse instances
                                        type: string
                                      namespace:
                                        description: Location of k8s Secret with username and
                                          password to be used by operator to connect to ClickHouse
                                          instances
                                        type: string
                                    type: object
                                  timeouts:
                                    description: Timeouts used to limit connection and queries
                                      from the operator to ClickHouse instances, In seconds
                                    properties:
                                      connect:
                                        description: Timout to setup connection from the operator
                                          to ClickHouse instances. In seconds.
                                        maximum: 10
                                        minimum: 1
                                        type: integer
                                      query:
                                        description: Timout to perform SQL query from the operator
                                          to ClickHouse instances. In seconds.
                                        maximum: 600
                                        minimum: 1
                                        type: integer
                                    type: object
                                  username:
                                    description: ClickHouse username to be used by operator to
                                      connect to ClickHouse instances, deprecated, use chCredentialsSecretName
                                    type: string
                                type: object
                              configuration:
                                properties:
                                  file:
                                    properties:
                                      path:
                                        properties:
                                          common:
                                            description: Path to the folder where ClickHouse configuration
                                              files common for all instances within a CHI are
                                              located. Default - config.d
                                            type: string
                                          host:
                                            description: Path to the folder where ClickHouse configuration
                                              files unique for each instance (host) within a CHI
                                              are located. Default - conf.d
                                            type: string
                                          user:
                                            description: Path to the folder where ClickHouse configuration
                                              files with users settings are located. Files are
                                              common for all instances within a CHI. Default -
                                              users.d
                                            type: string
                                        type: object
                                    type: object
                                  network:
                                    description: Default network parameters for any user which
                                      will create
                                    properties:
                                      hostRegexpTemplate:
                                        description: ClickHouse server configuration `<host_regexp>...</host_regexp>`
                                          for any <user>
                                        type: string
                                    type: object
                                  user:
                                    description: Default parameters for any user which will create
                                    properties:
                                      default:
                                        properties:
                                          networksIP:
                                            description: ClickHouse server configuration `<networks><ip>...</ip></networks>`
                                              for any <user>
                                            items:
                                              type: string
                                            type: array
                                          password:
                                            description: ClickHouse server configuration `<password>...</password>`
                                              for any <user>
                                            type: string
                                          profile:
                                            description: ClickHouse server configuration `<profile>...</profile>`
                                              for any <user>
                                            type: string
                                          quota:
                                            description: ClickHouse server configuration `<quota>...</quota>`
                                              for any <user>
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              configurationRestartPolicy:
                                description: Configuration restart policy describes what configuration
                                  changes require ClickHouse restart
                                properties:
                                  rules:
                                    description: Array of set of rules per specified ClickHouse
                                      versions
                                    items:
                                      properties:
                                        rules:
                                          description: Set of configuration rules for specified
                                            ClickHouse version
                                          items:
                                            description: 'setting: value pairs for configuration
                                              restart policy'
                                            type: object
                                          type: array
                                        version:
                                          description: ClickHouse version expression
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metrics:
                                description: parameters which use for connect to fetch metrics
                                  from clickhouse by clickhouse-operator
                                properties:
                                  timeouts:
                                    description: |
                                      Timeouts used to limit connection and queries from the metrics exporter to ClickHouse instances
                                      Specified in seconds.
                                    properties:
                                      collect:
                                        description: |
                                          Timeout used to limit metrics collection request. In seconds.
                                          Upon reaching this timeout metrics collection is aborted and no more metrics are collected in this cycle.
                                          All collected metrics are returned.
                                        maximum: 600
                                        minimum: 1
                                        type: integer
                                    type: object
                                type: object
                            type: object
                          label:
                            description: defines which metadata.labels will include or exclude
                              during render StatefulSet, Pod, PVC resources
                            properties:
                              appendScope:
                                description: |
                                  Whether to append *Scope* labels to StatefulSet and Pod
                                  - "LabelShardScopeIndex"
                                  - "LabelReplicaScopeIndex"
                                  - "LabelCHIScopeIndex"
                                  - "LabelCHIScopeCycleSize"
                                  - "LabelCHIScopeCycleIndex"
                                  - "LabelCHIScopeCycleOffset"
                                  - "LabelClusterScopeIndex"
                                  - "LabelClusterScopeCycleSize"
                                  - "LabelClusterScopeCycleIndex"
                                  - "LabelClusterScopeCycleOffset"
                                enum:
                                - ""
                                - "0"
                                - "1"
                                - "False"
                                - "false"
                                - "True"
                                - "true"
                                - "No"
                                - "no"
                                - "Yes"
                                - "yes"
                                - "Off"
                                - "off"
                                - "On"
                                - "on"
                                - Disable
                                - disable
                                - Enable
                                - enable
                                - Disabled
                                - disabled
                                - Enabled
                                - enabled
                                type: string
                              exclude:
                                description: |
                                  When propagating labels from the chi's `metadata.labels` section to child objects' `metadata.labels`,
                                  exclude labels from the following list
                                items:
                                  type: string
                                type: array
                              include:
                                description: |
                                  When propagating labels from the chi's `metadata.labels` section to child objects' `metadata.labels`,
                                  include labels from the following list
                                items:
                                  type: string
                                type: array
                            type: object
                          logger:
                            description: allow setup clickhouse-operator logger behavior
                            properties:
                              alsologtostderr:
                                description: boolean allows logs to stderr and files both
                                type: string
                              log_backtrace_at:
                                description: |-
                                  It can be set to a file and line number with a logging line.
                                  Ex.: file.go:123
                                  Each time when this line is being executed, a stack trace will be written to the Info log.
                                type: string
                              logtostderr:
                                description: boolean, allows logs to stderr
                                type: string
                              stderrthreshold:
                                type: string
                              v:
                                description: verbosity level of clickhouse-operator log, default
                                  - 1 max - 9
                                type: string
                              vmodule:
                                description: |
                                  Comma-separated list of filename=N, where filename (can be a pattern) must have no .go ext, and N is a V level.
                                  Ex.: file*=2 sets the 'V' to 2 in all files with names like file*.
                                type: string
                            type: object
                          pod:
                            description: define pod specific parameters
                            properties:
                              terminationGracePeriod:
                                description: |
                                  Optional duration in seconds the pod needs to terminate gracefully.
                                  Look details in `pod.spec.terminationGracePeriodSeconds`
                                type: integer
                            type: object
                          reconcile:
                            description: allow tuning reconciling process
                            properties:
                              host:
                                description: |
                                  Whether the operator during reconcile procedure should wait for a ClickHouse host:
                                    - to be excluded from a ClickHouse cluster
                                    - to complete all running queries
                                    - to be included into a ClickHouse cluster
                                  respectfully before moving forward
                                properties:
                                  wait:
                                    properties:
                                      exclude:
                                        description: Whether the operator during reconcile procedure
                                          should wait for a ClickHouse host to be excluded from
                                          a ClickHouse cluster
                                        enum:
                                        - ""
                                        - "0"
                                        - "1"
                                        - "False"
                                        - "false"
                                        - "True"
                                        - "true"
                                        - "No"
                                        - "no"
                                        - "Yes"
                                        - "yes"
                                        - "Off"
                                        - "off"
                                        - "On"
                                        - "on"
                                        - Disable
                                        - disable
                                        - Enable
                                        - enable
                                        - Disabled
                                        - disabled
                                        - Enabled
                                        - enabled
                                        type: string
                                      include:
                                        description: Whether the operator during reconcile procedure
                                          should wait for a ClickHouse host to be included into
                                          a ClickHouse cluster
                                        enum:
                                        - ""
                                        - "0"
                                        - "1"
                                        - "False"
                                        - "false"
                                        - "True"
                                        - "true"
                                        - "No"
                                        - "no"
                                        - "Yes"
                                        - "yes"
                                        - "Off"
                                        - "off"
                                        - "On"
                                        - "on"
                                        - Disable
                                        - disable
                                        - Enable
                                        - enable
                                        - Disabled
                                        - disabled
                                        - Enabled
                                        - enabled
                                        type: string
                                      queries:
                                        description: Whether the operator during reconcile procedure
                                          should wait for a ClickHouse host to complete all running
                                          queries
                                        enum:
                                        - ""
                                        - "0"
                                        - "1"
                                        - "False"
                                        - "false"
                                        - "True"
                                        - "true"
                                        - "No"
                                        - "no"
                                        - "Yes"
                                        - "yes"
                                        - "Off"
                                        - "off"
                                        - "On"
                                        - "on"
                                        - Disable
                                        - disable
                                        - Enable
                                        - enable
                                        - Disabled
                                        - disabled
                                        - Enabled
                                        - enabled
                                        type: string
                                    type: object
                                type: object
                              runtime:
                                description: runtime parameters for clickhouse-operator process
                                  which are used during reconcile cycle
                                properties:
                                  reconcileCHIsThreadsNumber:
                                    description: How many goroutines will be used to reconcile
                                      CHIs in parallel, 10 by default
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  reconcileShardsMaxConcurrencyPercent:
                                    description: The maximum percentage of cluster shards that
                                      may be reconciled in parallel, 50 percent by default.
                                    maximum: 100
                                    minimum: 0
                                    type: integer
                                  reconcileShardsThreadsNumber:
                                    description: How many goroutines will be used to reconcile
                                      shards of a cluster in parallel, 1 by default
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                type: object
                              statefulSet:
                                description: Allow change default behavior for reconciling StatefulSet
                                  which generated by clickhouse-operator
                                properties:
                                  create:
                                    description: Behavior during create StatefulSet
                                    properties:
                                      onFailure:
                                        description: |
                                          What to do in case created StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
                                          Possible options:
                                          1. abort - do nothing, just break the process and wait for admin.
                                          2. delete - delete newly created problematic StatefulSet.
                                          3. ignore (default) - ignore error, pretend nothing happened and move on to the next StatefulSet.
                                        type: string
                                    type: object
                                  update:
                                    description: Behavior during update StatefulSet
                                    properties:
                                      onFailure:
                                        description: |
                                          What to do in case updated StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
                                          Possible options:
                                          1. abort - do nothing, just break the process and wait for admin.
                                          2. rollback (default) - delete Pod and rollback StatefulSet to previous Generation. Pod would be recreated by StatefulSet based on rollback-ed configuration.
                                          3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet.
                                        type: string
                                      pollInterval:
                                        description: How many seconds to wait between checks for
                                          created/updated StatefulSet status
                                        type: integer
                                      timeout:
                                        description: How many seconds to wait for created/updated
                                          StatefulSet to be Ready
                                        type: integer
                                    type: object
                                type: object
                            type: object
                          statefulSet:
                            description: define StatefulSet-specific parameters
                            properties:
                              revisionHistoryLimit:
                                description: |
                                  revisionHistoryLimit is the maximum number of revisions that will be
                                  maintained in the StatefulSet's revision history.
                                  Look details in `statefulset.spec.revisionHistoryLimit`
                                type: integer
                            type: object
                          template:
                            description: Parameters which are used if you want to generate ClickHouseInstallationTemplate
                              custom resources from files which are stored inside clickhouse-operator
                              deployment
                            properties:
                              chi:
                                properties:
                                  path:
                                    description: Path to folder where ClickHouseInstallationTemplate
                                      .yaml manifests are located.
                                    type: string
                                  policy:
                                    description: |
                                      CHI template updates handling policy
                                      Possible policy values:
                                        - ReadOnStart. Accept CHIT updates on the operators start only.
                                        - ApplyOnNextReconcile. Accept CHIT updates at all time. Apply news CHITs on next regular reconcile of the CHI
                                    enum:
                                    - ""
                                    - ReadOnStart
                                    - ApplyOnNextReconcile
                                    type: string
                                type: object
                            type: object
                          watch:
                            description: Parameters for watch kubernetes resources which used
                              by clickhouse-operator deployment
                            properties:
                              namespaces:
                                description: List of namespaces where clickhouse-operator watches
                                  for events.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      status:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                served: true
                storage: true
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.zookeeper_cluster["66b8c62c5f1e4e177711f2ba7c1cbc968f24fcdf"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "zookeeper_cluster" {
      [32m+[0m[0m api_version             = "apps/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "StatefulSet"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "zookeeper"
      [32m+[0m[0m namespace               = "zoo1ns"
      [32m+[0m[0m override_namespace      = "zoo1ns"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: apps/v1
            kind: StatefulSet
            metadata:
              labels:
                app: zookeeper
              name: zookeeper
              namespace: zoo1ns
            spec:
              podManagementPolicy: OrderedReady
              replicas: 1
              selector:
                matchLabels:
                  app: zookeeper
              serviceName: zookeepers
              template:
                metadata:
                  annotations:
                    prometheus.io/port: "7000"
                    prometheus.io/scrape: "true"
                  labels:
                    app: zookeeper
                    what: node
                spec:
                  affinity:
                    podAntiAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                      - labelSelector:
                          matchExpressions:
                          - key: app
                            operator: In
                            values:
                            - zookeeper
                        topologyKey: kubernetes.io/hostname
                  containers:
                  - command:
                    - bash
                    - -x
                    - -c
                    - |
                      HOST=`hostname -s` &&
                      DOMAIN=`hostname -d` &&
                      CLIENT_PORT=2181 &&
                      SERVER_PORT=2888 &&
                      ELECTION_PORT=3888 &&
                      PROMETHEUS_PORT=7000 &&
                      ZOO_DATA_DIR=/var/lib/zookeeper/data &&
                      ZOO_DATA_LOG_DIR=/var/lib/zookeeper/datalog &&
                      {
                        echo "clientPort=${CLIENT_PORT}"
                        echo 'tickTime=2000'
                        echo 'initLimit=300'
                        echo 'syncLimit=10'
                        echo 'maxClientCnxns=2000'
                        echo 'maxTimeToWaitForEpoch=2000'
                        echo 'maxSessionTimeout=60000000'
                        echo "dataDir=${ZOO_DATA_DIR}"
                        echo "dataLogDir=${ZOO_DATA_LOG_DIR}"
                        echo 'autopurge.snapRetainCount=10'
                        echo 'autopurge.purgeInterval=1'
                        echo 'preAllocSize=131072'
                        echo 'snapCount=3000000'
                        echo 'leaderServes=yes'
                        echo 'standaloneEnabled=false'
                        echo '4lw.commands.whitelist=*'
                        echo 'metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider'
                        echo "metricsProvider.httpPort=${PROMETHEUS_PORT}"
                        echo "skipACL=true"
                        echo "fastleader.maxNotificationInterval=10000"
                      } > /conf/zoo.cfg &&
                      {
                        echo "zookeeper.root.logger=CONSOLE"
                        echo "zookeeper.console.threshold=INFO"
                        echo "log4j.rootLogger=\${zookeeper.root.logger}"
                        echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender"
                        echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}"
                        echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout"
                        echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n"
                      } > /conf/log4j.properties &&
                      echo 'JVMFLAGS="-Xms128M -Xmx4G -XX:ActiveProcessorCount=8 -XX:+AlwaysPreTouch -Djute.maxbuffer=8388608 -XX:MaxGCPauseMillis=50"' > /conf/java.env &&
                      if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
                          NAME=${BASH_REMATCH[1]} &&
                          ORD=${BASH_REMATCH[2]};
                      else
                          echo "Failed to parse name and ordinal of Pod" &&
                          exit 1;
                      fi &&
                      mkdir -pv ${ZOO_DATA_DIR} &&
                      mkdir -pv ${ZOO_DATA_LOG_DIR} &&
                      whoami &&
                      chown -Rv zookeeper "$ZOO_DATA_DIR" "$ZOO_DATA_LOG_DIR" &&
                      export MY_ID=$((ORD+1)) &&
                      echo $MY_ID > $ZOO_DATA_DIR/myid &&
                      for (( i=1; i<=$SERVERS; i++ )); do
                          echo "server.$i=$NAME-$((i-1)).$DOMAIN:$SERVER_PORT:$ELECTION_PORT" >> /conf/zoo.cfg;
                      done &&
                      if [[ $SERVERS -eq 1 ]]; then
                          echo "group.1=1" >> /conf/zoo.cfg;
                      else
                          echo "group.1=1:2:3" >> /conf/zoo.cfg;
                      fi &&
                      for (( i=1; i<=$SERVERS; i++ )); do
                          WEIGHT=1
                          if [[ $i == 1 ]]; then
                            WEIGHT=10
                          fi
                          echo "weight.$i=$WEIGHT" >> /conf/zoo.cfg;
                      done &&
                      zkServer.sh start-foreground
                    env:
                    - name: SERVERS
                      value: "1"
                    image: docker.io/zookeeper:3.8.3
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      exec:
                        command:
                        - bash
                        - -xc
                        - date && OK=$(exec 3<>/dev/tcp/127.0.0.1/2181 ; printf "ruok" >&3 ; IFS=;
                          tee <&3; exec 3<&- ;); if [[ "$OK" == "imok" ]]; then exit 0; else exit
                          1; fi
                      initialDelaySeconds: 10
                      periodSeconds: 30
                      timeoutSeconds: 5
                    name: kubernetes-zookeeper
                    ports:
                    - containerPort: 2181
                      name: client
                    - containerPort: 2888
                      name: server
                    - containerPort: 3888
                      name: leader-election
                    - containerPort: 7000
                      name: prometheus
                    readinessProbe:
                      exec:
                        command:
                        - bash
                        - -c
                        - ' IFS=; MNTR=$(exec 3<>/dev/tcp/127.0.0.1/2181 ; printf "mntr" >&3 ;
                          tee <&3; exec 3<&- ;); while [[ "$MNTR" == "This ZooKeeper instance
                          is not currently serving requests" ]]; do echo "wait mntr works"; sleep
                          1; MNTR=$(exec 3<>/dev/tcp/127.0.0.1/2181 ; printf "mntr" >&3 ; tee
                          <&3; exec 3<&- ;); done; STATE=$(echo -e $MNTR | grep zk_server_state
                          | cut -d " " -f 2); if [[ "$STATE" =~ "leader" ]]; then echo "check
                          leader state"; SYNCED_FOLLOWERS=$(echo -e $MNTR | grep zk_synced_followers
                          | awk -F"[[:space:]]+" "{print \$2}" | cut -d "." -f 1); if [[ "$SYNCED_FOLLOWERS"
                          != "0" ]]; then ./bin/zkCli.sh ls /; exit $?; else exit 0; fi; elif
                          [[ "$STATE" =~ "follower" ]]; then echo "check follower state"; PEER_STATE=$(echo
                          -e $MNTR | grep zk_peer_state); if [[ "$PEER_STATE" =~ "following -
                          broadcast" ]]; then ./bin/zkCli.sh ls /; exit $?; else exit 1; fi; else
                          exit 1; fi '
                      initialDelaySeconds: 10
                      periodSeconds: 60
                      timeoutSeconds: 60
                    resources:
                      limits:
                        cpu: "2"
                        memory: 4Gi
                      requests:
                        cpu: "1"
                        memory: 512M
                    volumeMounts:
                    - mountPath: /var/lib/zookeeper
                      name: datadir-volume
                  securityContext:
                    fsGroup: 1000
                    runAsUser: 1000
              updateStrategy:
                type: RollingUpdate
              volumeClaimTemplates:
              - metadata:
                  name: datadir-volume
                spec:
                  accessModes:
                  - ReadWriteOnce
                  resources:
                    requests:
                      storage: 25Gi
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.zookeeper_cluster["81f9379b0f5e802403435894346a545fb3e01ac8"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "zookeeper_cluster" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "Service"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "zookeeper"
      [32m+[0m[0m namespace               = "zoo1ns"
      [32m+[0m[0m override_namespace      = "zoo1ns"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            kind: Service
            metadata:
              labels:
                app: zookeeper
              name: zookeeper
              namespace: zoo1ns
            spec:
              ports:
              - name: client
                port: 2181
              - name: prometheus
                port: 7000
              selector:
                app: zookeeper
                what: node
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.zookeeper_cluster["8d0b835ecbf604bfa13f334f17429e914ef426f5"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "zookeeper_cluster" {
      [32m+[0m[0m api_version             = "policy/v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "PodDisruptionBudget"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "zookeeper-pod-disruption-budget"
      [32m+[0m[0m namespace               = "zoo1ns"
      [32m+[0m[0m override_namespace      = "zoo1ns"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: policy/v1
            kind: PodDisruptionBudget
            metadata:
              name: zookeeper-pod-disruption-budget
              namespace: zoo1ns
            spec:
              maxUnavailable: 1
              selector:
                matchLabels:
                  app: zookeeper
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubectl_manifest.zookeeper_cluster["9e2ef57f98412640af3d162ccba5cb7b3402f27e"][0m will be created
[0m  [32m+[0m[0m resource "kubectl_manifest" "zookeeper_cluster" {
      [32m+[0m[0m api_version             = "v1"
      [32m+[0m[0m apply_only              = false
      [32m+[0m[0m force_conflicts         = false
      [32m+[0m[0m force_new               = false
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kind                    = "Service"
      [32m+[0m[0m live_manifest_incluster = (sensitive value)
      [32m+[0m[0m live_uid                = (known after apply)
      [32m+[0m[0m name                    = "zookeepers"
      [32m+[0m[0m namespace               = "zoo1ns"
      [32m+[0m[0m override_namespace      = "zoo1ns"
      [32m+[0m[0m server_side_apply       = false
      [32m+[0m[0m uid                     = (known after apply)
      [32m+[0m[0m validate_schema         = true
      [32m+[0m[0m wait_for_rollout        = true
      [32m+[0m[0m yaml_body               = (sensitive value)
      [32m+[0m[0m yaml_body_parsed        = <<-EOT
            apiVersion: v1
            kind: Service
            metadata:
              labels:
                app: zookeeper
              name: zookeepers
              namespace: zoo1ns
            spec:
              clusterIP: None
              ports:
              - name: server
                port: 2888
              - name: leader-election
                port: 3888
              selector:
                app: zookeeper
                what: node
        EOT
      [32m+[0m[0m yaml_incluster          = (sensitive value)
    }

[1m  # module.clickhouse_operator.kubernetes_namespace.zookeeper[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_namespace" "zookeeper" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m wait_for_default_service_account = false

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "zoo1ns"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.eks.data.aws_eks_cluster_auth.this[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_eks_cluster_auth" "this" {
      [32m+[0m[0m id    = (known after apply)
      [32m+[0m[0m name  = "clickhouse-cluster-nacho-2"
      [32m+[0m[0m token = (sensitive value)
    }

[1m  # module.eks.data.aws_iam_policy_document.ebs_csi_driver_assume_role_policy[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "ebs_csi_driver_assume_role_policy" {
      [32m+[0m[0m id   = (known after apply)
      [32m+[0m[0m json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRoleWithWebIdentity",
            ]
          [32m+[0m[0m effect  = "Allow"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "system:serviceaccount:kube-system:ebs-csi-controller-sa",
                ]
              [32m+[0m[0m variable = (known after apply)
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m (known after apply),
                ]
              [32m+[0m[0m type        = "Federated"
            }
        }
    }

[1m  # module.eks.aws_eks_cluster.this[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m certificate_authority = (known after apply)
      [32m+[0m[0m cluster_id            = (known after apply)
      [32m+[0m[0m created_at            = (known after apply)
      [32m+[0m[0m endpoint              = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m identity              = (known after apply)
      [32m+[0m[0m name                  = "clickhouse-cluster-nacho-2"
      [32m+[0m[0m platform_version      = (known after apply)
      [32m+[0m[0m role_arn              = (known after apply)
      [32m+[0m[0m status                = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m version               = "1.26"

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m cluster_security_group_id = (known after apply)
          [32m+[0m[0m endpoint_private_access   = true
          [32m+[0m[0m endpoint_public_access    = true
          [32m+[0m[0m public_access_cidrs       = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m subnet_ids                = (known after apply)
          [32m+[0m[0m vpc_id                    = (known after apply)
        }
    }

[1m  # module.eks.aws_eks_node_group.this["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_eks_node_group" "this" {
      [32m+[0m[0m ami_type               = (known after apply)
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m capacity_type          = (known after apply)
      [32m+[0m[0m cluster_name           = "clickhouse-cluster-nacho-2"
      [32m+[0m[0m disk_size              = 20
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_types         = [
          [32m+[0m[0m "m5.large",
        ]
      [32m+[0m[0m node_group_name        = "clickhouse-cluster-nacho-2-node-group-0"
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [32m+[0m[0m node_role_arn          = (known after apply)
      [32m+[0m[0m release_version        = (known after apply)
      [32m+[0m[0m resources              = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m subnet_ids             = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "k8s.io/cluster-autoscaler/clickhouse-cluster-nacho-2" = "owned"
          [32m+[0m[0m "k8s.io/cluster-autoscaler/enabled"                    = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "k8s.io/cluster-autoscaler/clickhouse-cluster-nacho-2" = "owned"
          [32m+[0m[0m "k8s.io/cluster-autoscaler/enabled"                    = "true"
        }
      [32m+[0m[0m version                = (known after apply)

      [32m+[0m[0m scaling_config {
          [32m+[0m[0m desired_size = 2
          [32m+[0m[0m max_size     = 10
          [32m+[0m[0m min_size     = 0
        }
    }

[1m  # module.eks.aws_eks_node_group.this["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_eks_node_group" "this" {
      [32m+[0m[0m ami_type               = (known after apply)
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m capacity_type          = (known after apply)
      [32m+[0m[0m cluster_name           = "clickhouse-cluster-nacho-2"
      [32m+[0m[0m disk_size              = 20
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_types         = [
          [32m+[0m[0m "m5.large",
        ]
      [32m+[0m[0m node_group_name        = "clickhouse-cluster-nacho-2-node-group-1"
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [32m+[0m[0m node_role_arn          = (known after apply)
      [32m+[0m[0m release_version        = (known after apply)
      [32m+[0m[0m resources              = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m subnet_ids             = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "k8s.io/cluster-autoscaler/clickhouse-cluster-nacho-2" = "owned"
          [32m+[0m[0m "k8s.io/cluster-autoscaler/enabled"                    = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "k8s.io/cluster-autoscaler/clickhouse-cluster-nacho-2" = "owned"
          [32m+[0m[0m "k8s.io/cluster-autoscaler/enabled"                    = "true"
        }
      [32m+[0m[0m version                = (known after apply)

      [32m+[0m[0m scaling_config {
          [32m+[0m[0m desired_size = 2
          [32m+[0m[0m max_size     = 10
          [32m+[0m[0m min_size     = 0
        }
    }

[1m  # module.eks.aws_iam_openid_connect_provider.this[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "this" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m client_id_list  = [
          [32m+[0m[0m "sts.amazonaws.com",
        ]
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m tags            = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-eks-irsa"
        }
      [32m+[0m[0m tags_all        = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-eks-irsa"
        }
      [32m+[0m[0m thumbprint_list = [
          [32m+[0m[0m "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        ]
      [32m+[0m[0m url             = (known after apply)
    }

[1m  # module.eks.aws_iam_policy.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "cluster_autoscaler" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "clickhouse-cluster-nacho-2-eks-cluster-autoscaler"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "autoscaling:DescribeAutoScalingGroups",
                          [32m+[0m[0m "autoscaling:DescribeAutoScalingInstances",
                          [32m+[0m[0m "autoscaling:DescribeLaunchConfigurations",
                          [32m+[0m[0m "autoscaling:DescribeScalingActivities",
                          [32m+[0m[0m "autoscaling:DescribeTags",
                          [32m+[0m[0m "ec2:DescribeInstanceTypes",
                          [32m+[0m[0m "ec2:DescribeLaunchTemplateVersions",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "autoscaling:SetDesiredCapacity",
                          [32m+[0m[0m "autoscaling:TerminateInstanceInAutoScalingGroup",
                          [32m+[0m[0m "ec2:DescribeImages",
                          [32m+[0m[0m "ec2:GetInstanceTypesFromInstanceRequirements",
                          [32m+[0m[0m "eks:DescribeNodegroup",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id   = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # module.eks.aws_iam_policy.eks_admin_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "eks_admin_policy" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "EKS Admin Policy"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "clickhouse-cluster-nacho-2-eks-admin-policy"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m policy      = (known after apply)
      [32m+[0m[0m policy_id   = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # module.eks.aws_iam_role.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "cluster_autoscaler" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = (known after apply)
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "clickhouse-cluster-nacho-2-eks-cluster-autoscaler"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.eks.aws_iam_role.ebs_csi_driver_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ebs_csi_driver_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = (known after apply)
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "clickhouse-cluster-nacho-2-eks-ebs-csi-driver"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.eks.aws_iam_role.eks_admin_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_admin_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m AWS = "arn:aws:iam::434208318714:root"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "clickhouse-cluster-nacho-2-eks-admin-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.eks.aws_iam_role.eks_cluster_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_cluster_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "clickhouse-cluster-nacho-2-eks-cluster-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.eks.aws_iam_role.eks_node_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_node_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "clickhouse-cluster-nacho-2-eks-node-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_autoscaler_attach[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_autoscaler_attach" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-cluster-autoscaler"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.ebs_csi_driver_policy_attachment[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ebs_csi_driver_policy_attachment" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-ebs-csi-driver"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.ecr_read_only_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecr_read_only_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-node-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_admin_attach[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_admin_attach" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-admin-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_cluster_policy_attachment[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_cluster_policy_attachment" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-cluster-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_cni_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_cni_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-node-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_service_policy_attachment[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_service_policy_attachment" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-cluster-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_vpc_resource_controller_attachment[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_vpc_resource_controller_attachment" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-cluster-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_worker_node_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_worker_node_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m[0m role       = "clickhouse-cluster-nacho-2-eks-node-role"
    }

[1m  # module.eks.aws_internet_gateway.this[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-igw"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-igw"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.eks.aws_route_table.this[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "this" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-rt"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-rt"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.eks.aws_route_table_association.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "this" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.eks.aws_route_table_association.this[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "this" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.eks.aws_subnet.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "this" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-subnet-us-west-1b"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-subnet-us-west-1b"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.eks.aws_subnet.this[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "this" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-subnet-us-west-1c"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-subnet-us-west-1c"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.eks.aws_vpc.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-vpc"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-vpc"
        }
    }

[1m  # module.eks.aws_vpc_endpoint.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = false
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.us-west-1.s3"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-s3-endpoint"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name" = "clickhouse-cluster-nacho-2-s3-endpoint"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)
    }

[1m  # module.eks.kubernetes_cluster_role.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "cluster_autoscaler" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "k8s-addon" = "cluster-autoscaler.addons.k8s.io"
              [32m+[0m[0m "k8s-app"   = "cluster-autoscaler"
            }
          [32m+[0m[0m name             = "cluster-autoscaler"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "events",
              [32m+[0m[0m "endpoints",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "create",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "pods/eviction",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "create",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "pods/status",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "update",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups     = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resource_names = [
              [32m+[0m[0m "cluster-autoscaler",
            ]
          [32m+[0m[0m resources      = [
              [32m+[0m[0m "endpoints",
            ]
          [32m+[0m[0m verbs          = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "update",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "nodes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "watch",
              [32m+[0m[0m "list",
              [32m+[0m[0m "get",
              [32m+[0m[0m "update",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "namespaces",
              [32m+[0m[0m "pods",
              [32m+[0m[0m "services",
              [32m+[0m[0m "replicationcontrollers",
              [32m+[0m[0m "persistentvolumeclaims",
              [32m+[0m[0m "persistentvolumes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "watch",
              [32m+[0m[0m "list",
              [32m+[0m[0m "get",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "extensions",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "replicasets",
              [32m+[0m[0m "daemonsets",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "watch",
              [32m+[0m[0m "list",
              [32m+[0m[0m "get",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "policy",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "poddisruptionbudgets",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "watch",
              [32m+[0m[0m "list",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "apps",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "statefulsets",
              [32m+[0m[0m "replicasets",
              [32m+[0m[0m "daemonsets",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "watch",
              [32m+[0m[0m "list",
              [32m+[0m[0m "get",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "storageclasses",
              [32m+[0m[0m "csinodes",
              [32m+[0m[0m "csidrivers",
              [32m+[0m[0m "csistoragecapacities",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "watch",
              [32m+[0m[0m "list",
              [32m+[0m[0m "get",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "batch",
              [32m+[0m[0m "extensions",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "jobs",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "coordination.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "leases",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "create",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups     = [
              [32m+[0m[0m "coordination.k8s.io",
            ]
          [32m+[0m[0m resource_names = [
              [32m+[0m[0m "cluster-autoscaler",
            ]
          [32m+[0m[0m resources      = [
              [32m+[0m[0m "leases",
            ]
          [32m+[0m[0m verbs          = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "update",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role.ebs_csi_node_role[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "ebs_csi_node_role" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-node-role"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "nodes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "patch",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role.ebs_external_attacher_role[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "ebs_external_attacher_role" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-external-attacher-role"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "persistentvolumes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "nodes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "csi.storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "csinodeinfos",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumeattachments",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumeattachments/status",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "patch",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role.ebs_external_provisioner_role[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "ebs_external_provisioner_role" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-external-provisioner-role"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "persistentvolumes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "create",
              [32m+[0m[0m "delete",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "persistentvolumeclaims",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "update",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "storageclasses",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "events",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "create",
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "snapshot.storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumesnapshots",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "snapshot.storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumesnapshotcontents",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "csinodes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "nodes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumeattachments",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role.ebs_external_resizer_role[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "ebs_external_resizer_role" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-external-resizer-role"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "persistentvolumes",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "persistentvolumeclaims",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "persistentvolumeclaims/status",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "storageclasses",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "events",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "create",
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "pods",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role.ebs_external_snapshotter_role[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "ebs_external_snapshotter_role" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-external-snapshotter-role"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "events",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "create",
              [32m+[0m[0m "update",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "snapshot.storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumesnapshotclasses",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "snapshot.storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumesnapshotcontents",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "create",
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
              [32m+[0m[0m "update",
              [32m+[0m[0m "delete",
              [32m+[0m[0m "patch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "snapshot.storage.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "volumesnapshotcontents/status",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "update",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "cluster_autoscaler" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "k8s-addon" = "cluster-autoscaler.addons.k8s.io"
              [32m+[0m[0m "k8s-app"   = "cluster-autoscaler"
            }
          [32m+[0m[0m name             = "cluster-autoscaler"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "cluster-autoscaler"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "cluster-autoscaler"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.ebs_csi_attacher_binding[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "ebs_csi_attacher_binding" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-attacher-binding"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "ebs-external-attacher-role"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "ebs-csi-controller-sa"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.ebs_csi_node_getter_binding[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "ebs_csi_node_getter_binding" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-node-getter-binding"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "ebs-csi-node-role"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "ebs-csi-node-sa"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.ebs_csi_provisioner_binding[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "ebs_csi_provisioner_binding" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-provisioner-binding"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "ebs-external-provisioner-role"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "ebs-csi-controller-sa"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.ebs_csi_resizer_binding[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "ebs_csi_resizer_binding" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-resizer-binding"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "ebs-external-resizer-role"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "ebs-csi-controller-sa"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.ebs_csi_snapshotter_binding[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "ebs_csi_snapshotter_binding" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-snapshotter-binding"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "ebs-external-snapshotter-role"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "ebs-csi-controller-sa"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_csi_driver_v1.ebs_csi_aws_com[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_csi_driver_v1" "ebs_csi_aws_com" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs.csi.aws.com"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m attach_required        = true
          [32m+[0m[0m pod_info_on_mount      = false
          [32m+[0m[0m volume_lifecycle_modes = [
              [32m+[0m[0m "Persistent",
            ]
        }
    }

[1m  # module.eks.kubernetes_daemonset.ebs_csi_node[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_daemonset" "ebs_csi_node" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m wait_for_rollout = true

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-node"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m min_ready_seconds      = 0
          [32m+[0m[0m revision_history_limit = 10

          [32m+[0m[0m selector {
              [32m+[0m[0m match_labels = {
                  [32m+[0m[0m "app"                        = "ebs-csi-node"
                  [32m+[0m[0m "app.kubernetes.io/instance" = "aws-ebs-csi-driver"
                  [32m+[0m[0m "app.kubernetes.io/name"     = "aws-ebs-csi-driver"
                }
            }

          [32m+[0m[0m strategy {
              [32m+[0m[0m type = "RollingUpdate"

              [32m+[0m[0m rolling_update {
                  [32m+[0m[0m max_unavailable = "10%"
                }
            }

          [32m+[0m[0m template {
              [32m+[0m[0m metadata {
                  [32m+[0m[0m generation       = (known after apply)
                  [32m+[0m[0m labels           = {
                      [32m+[0m[0m "app"                          = "ebs-csi-node"
                      [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
                      [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
                      [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
                      [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
                      [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
                      [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
                    }
                  [32m+[0m[0m name             = (known after apply)
                  [32m+[0m[0m resource_version = (known after apply)
                  [32m+[0m[0m uid              = (known after apply)
                }
              [32m+[0m[0m spec {
                  [32m+[0m[0m automount_service_account_token  = true
                  [32m+[0m[0m dns_policy                       = "ClusterFirst"
                  [32m+[0m[0m enable_service_links             = true
                  [32m+[0m[0m host_ipc                         = false
                  [32m+[0m[0m host_network                     = false
                  [32m+[0m[0m host_pid                         = false
                  [32m+[0m[0m hostname                         = (known after apply)
                  [32m+[0m[0m node_name                        = (known after apply)
                  [32m+[0m[0m node_selector                    = {
                      [32m+[0m[0m "kubernetes.io/os" = "linux"
                    }
                  [32m+[0m[0m priority_class_name              = "system-node-critical"
                  [32m+[0m[0m restart_policy                   = "Always"
                  [32m+[0m[0m scheduler_name                   = (known after apply)
                  [32m+[0m[0m service_account_name             = "ebs-csi-node-sa"
                  [32m+[0m[0m share_process_namespace          = false
                  [32m+[0m[0m termination_grace_period_seconds = 30

                  [32m+[0m[0m affinity {
                      [32m+[0m[0m node_affinity {
                          [32m+[0m[0m required_during_scheduling_ignored_during_execution {
                              [32m+[0m[0m node_selector_term {
                                  [32m+[0m[0m match_expressions {
                                      [32m+[0m[0m key      = "eks.amazonaws.com/compute-type"
                                      [32m+[0m[0m operator = "NotIn"
                                      [32m+[0m[0m values   = [
                                          [32m+[0m[0m "fargate",
                                        ]
                                    }
                                }
                            }
                        }
                    }

                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "node",
                          [32m+[0m[0m "--endpoint=$(CSI_ENDPOINT)",
                          [32m+[0m[0m "--logging-format=text",
                          [32m+[0m[0m "--v=2",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/ebs-csi-driver/aws-ebs-csi-driver:v1.20.0"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "ebs-plugin"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "CSI_ENDPOINT"
                          [32m+[0m[0m value = "unix:/csi/csi.sock"
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name = "CSI_NODE_NAME"

                          [32m+[0m[0m value_from {
                              [32m+[0m[0m field_ref {
                                  [32m+[0m[0m api_version = "v1"
                                  [32m+[0m[0m field_path  = "spec.nodeName"
                                }
                            }
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "AWS_REGION"
                          [32m+[0m[0m value = "us-west-1"
                        }

                      [32m+[0m[0m liveness_probe {
                          [32m+[0m[0m failure_threshold     = 5
                          [32m+[0m[0m initial_delay_seconds = 10
                          [32m+[0m[0m period_seconds        = 10
                          [32m+[0m[0m success_threshold     = 1
                          [32m+[0m[0m timeout_seconds       = 3

                          [32m+[0m[0m http_get {
                              [32m+[0m[0m path   = "/healthz"
                              [32m+[0m[0m port   = "healthz"
                              [32m+[0m[0m scheme = "HTTP"
                            }
                        }

                      [32m+[0m[0m port {
                          [32m+[0m[0m container_port = 9808
                          [32m+[0m[0m name           = "healthz"
                          [32m+[0m[0m protocol       = "TCP"
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "200Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = true
                          [32m+[0m[0m privileged                 = true
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/kubelet"
                          [32m+[0m[0m mount_propagation = "Bidirectional"
                          [32m+[0m[0m name              = "kubelet-dir"
                          [32m+[0m[0m read_only         = false
                        }
                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/csi"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "plugin-dir"
                          [32m+[0m[0m read_only         = false
                        }
                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/dev"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "device-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=$(ADDRESS)",
                          [32m+[0m[0m "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                          [32m+[0m[0m "--v=2",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/node-driver-registrar:v2.8.0-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "node-driver-registrar"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "ADDRESS"
                          [32m+[0m[0m value = "/csi/csi.sock"
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "DRIVER_REG_SOCK_PATH"
                          [32m+[0m[0m value = "/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock"
                        }

                      [32m+[0m[0m liveness_probe {
                          [32m+[0m[0m failure_threshold     = 3
                          [32m+[0m[0m initial_delay_seconds = 30
                          [32m+[0m[0m period_seconds        = 90
                          [32m+[0m[0m success_threshold     = 1
                          [32m+[0m[0m timeout_seconds       = 15

                          [32m+[0m[0m exec {
                              [32m+[0m[0m command = [
                                  [32m+[0m[0m "/csi-node-driver-registrar",
                                  [32m+[0m[0m "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                  [32m+[0m[0m "--mode=kubelet-registration-probe",
                                ]
                            }
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "20Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/csi"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "plugin-dir"
                          [32m+[0m[0m read_only         = false
                        }
                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/registration"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "registration-dir"
                          [32m+[0m[0m read_only         = false
                        }
                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/kubelet/plugins/ebs.csi.aws.com/"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "probe-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=/csi/csi.sock",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/livenessprobe:v2.10.0-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "liveness-probe"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "20Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/csi"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "plugin-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }

                  [32m+[0m[0m security_context {
                      [32m+[0m[0m fs_group        = "0"
                      [32m+[0m[0m run_as_group    = "0"
                      [32m+[0m[0m run_as_non_root = false
                      [32m+[0m[0m run_as_user     = "0"
                    }

                  [32m+[0m[0m toleration {
                      [32m+[0m[0m operator = "Exists"
                    }

                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "kubelet-dir"

                      [32m+[0m[0m host_path {
                          [32m+[0m[0m path = "/var/lib/kubelet"
                          [32m+[0m[0m type = "Directory"
                        }
                    }
                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "plugin-dir"

                      [32m+[0m[0m host_path {
                          [32m+[0m[0m path = "/var/lib/kubelet/plugins/ebs.csi.aws.com/"
                          [32m+[0m[0m type = "DirectoryOrCreate"
                        }
                    }
                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "registration-dir"

                      [32m+[0m[0m host_path {
                          [32m+[0m[0m path = "/var/lib/kubelet/plugins_registry/"
                          [32m+[0m[0m type = "Directory"
                        }
                    }
                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "device-dir"

                      [32m+[0m[0m host_path {
                          [32m+[0m[0m path = "/dev"
                          [32m+[0m[0m type = "Directory"
                        }
                    }
                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "probe-dir"

                      [32m+[0m[0m empty_dir {}
                    }
                }
            }
        }
    }

[1m  # module.eks.kubernetes_deployment.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_deployment" "cluster_autoscaler" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m wait_for_rollout = true

      [32m+[0m[0m metadata {
          [32m+[0m[0m annotations      = {
              [32m+[0m[0m "cluster-autoscaler.kubernetes.io/safe-to-evict" = "false"
            }
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app" = "cluster-autoscaler"
            }
          [32m+[0m[0m name             = "cluster-autoscaler"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m min_ready_seconds         = 0
          [32m+[0m[0m paused                    = false
          [32m+[0m[0m progress_deadline_seconds = 600
          [32m+[0m[0m replicas                  = "2"
          [32m+[0m[0m revision_history_limit    = 10

          [32m+[0m[0m selector {
              [32m+[0m[0m match_labels = {
                  [32m+[0m[0m "app" = "cluster-autoscaler"
                }
            }

          [32m+[0m[0m template {
              [32m+[0m[0m metadata {
                  [32m+[0m[0m annotations      = {
                      [32m+[0m[0m "prometheus.io/port"   = "8085"
                      [32m+[0m[0m "prometheus.io/scrape" = "true"
                    }
                  [32m+[0m[0m generation       = (known after apply)
                  [32m+[0m[0m labels           = {
                      [32m+[0m[0m "app" = "cluster-autoscaler"
                    }
                  [32m+[0m[0m name             = (known after apply)
                  [32m+[0m[0m resource_version = (known after apply)
                  [32m+[0m[0m uid              = (known after apply)
                }
              [32m+[0m[0m spec {
                  [32m+[0m[0m automount_service_account_token  = true
                  [32m+[0m[0m dns_policy                       = "ClusterFirst"
                  [32m+[0m[0m enable_service_links             = true
                  [32m+[0m[0m host_ipc                         = false
                  [32m+[0m[0m host_network                     = false
                  [32m+[0m[0m host_pid                         = false
                  [32m+[0m[0m hostname                         = (known after apply)
                  [32m+[0m[0m node_name                        = (known after apply)
                  [32m+[0m[0m priority_class_name              = "system-cluster-critical"
                  [32m+[0m[0m restart_policy                   = "Always"
                  [32m+[0m[0m scheduler_name                   = (known after apply)
                  [32m+[0m[0m service_account_name             = "cluster-autoscaler"
                  [32m+[0m[0m share_process_namespace          = false
                  [32m+[0m[0m termination_grace_period_seconds = 30

                  [32m+[0m[0m affinity {
                      [32m+[0m[0m pod_anti_affinity {
                          [32m+[0m[0m required_during_scheduling_ignored_during_execution {
                              [32m+[0m[0m topology_key = "kubernetes.io/hostname"

                              [32m+[0m[0m label_selector {
                                  [32m+[0m[0m match_expressions {
                                      [32m+[0m[0m key      = "app"
                                      [32m+[0m[0m operator = "In"
                                      [32m+[0m[0m values   = [
                                          [32m+[0m[0m "cluster-autoscaler",
                                        ]
                                    }
                                }
                            }
                        }
                    }

                  [32m+[0m[0m container {
                      [32m+[0m[0m command                    = [
                          [32m+[0m[0m "./cluster-autoscaler",
                          [32m+[0m[0m "--v=4",
                          [32m+[0m[0m "--stderrthreshold=info",
                          [32m+[0m[0m "--cloud-provider=aws",
                          [32m+[0m[0m "--skip-nodes-with-local-storage=false",
                          [32m+[0m[0m "--expander=most-pods",
                          [32m+[0m[0m "--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/clickhouse-cluster-nacho-2",
                          [32m+[0m[0m "--balance-similar-node-groups",
                          [32m+[0m[0m "--skip-nodes-with-system-pods=false",
                        ]
                      [32m+[0m[0m image                      = "k8s.gcr.io/autoscaling/cluster-autoscaler:v1.26.1"
                      [32m+[0m[0m image_pull_policy          = "Always"
                      [32m+[0m[0m name                       = "cluster-autoscaler"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "100m"
                              [32m+[0m[0m "memory" = "600Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "100m"
                              [32m+[0m[0m "memory" = "600Mi"
                            }
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/etc/ssl/certs/ca-certificates.crt"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "ssl-certs"
                          [32m+[0m[0m read_only         = true
                        }
                    }

                  [32m+[0m[0m security_context {
                      [32m+[0m[0m fs_group        = "65534"
                      [32m+[0m[0m run_as_non_root = true
                      [32m+[0m[0m run_as_user     = "65534"
                    }

                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "ssl-certs"

                      [32m+[0m[0m host_path {
                          [32m+[0m[0m path = "/etc/ssl/certs/ca-bundle.crt"
                        }
                    }
                }
            }
        }
    }

[1m  # module.eks.kubernetes_deployment.ebs_csi_controller[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_deployment" "ebs_csi_controller" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m wait_for_rollout = true

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-controller"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m min_ready_seconds         = 0
          [32m+[0m[0m paused                    = false
          [32m+[0m[0m progress_deadline_seconds = 600
          [32m+[0m[0m replicas                  = "2"
          [32m+[0m[0m revision_history_limit    = 10

          [32m+[0m[0m selector {
              [32m+[0m[0m match_labels = {
                  [32m+[0m[0m "app"                        = "ebs-csi-controller"
                  [32m+[0m[0m "app.kubernetes.io/instance" = "aws-ebs-csi-driver"
                  [32m+[0m[0m "app.kubernetes.io/name"     = "aws-ebs-csi-driver"
                }
            }

          [32m+[0m[0m strategy {
              [32m+[0m[0m type = "RollingUpdate"

              [32m+[0m[0m rolling_update {
                  [32m+[0m[0m max_surge       = "25%"
                  [32m+[0m[0m max_unavailable = "1"
                }
            }

          [32m+[0m[0m template {
              [32m+[0m[0m metadata {
                  [32m+[0m[0m generation       = (known after apply)
                  [32m+[0m[0m labels           = {
                      [32m+[0m[0m "app"                          = "ebs-csi-controller"
                      [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
                      [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
                      [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
                      [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
                      [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
                      [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
                    }
                  [32m+[0m[0m name             = (known after apply)
                  [32m+[0m[0m resource_version = (known after apply)
                  [32m+[0m[0m uid              = (known after apply)
                }
              [32m+[0m[0m spec {
                  [32m+[0m[0m automount_service_account_token  = true
                  [32m+[0m[0m dns_policy                       = "ClusterFirst"
                  [32m+[0m[0m enable_service_links             = true
                  [32m+[0m[0m host_ipc                         = false
                  [32m+[0m[0m host_network                     = false
                  [32m+[0m[0m host_pid                         = false
                  [32m+[0m[0m hostname                         = (known after apply)
                  [32m+[0m[0m node_name                        = (known after apply)
                  [32m+[0m[0m node_selector                    = {
                      [32m+[0m[0m "kubernetes.io/os" = "linux"
                    }
                  [32m+[0m[0m priority_class_name              = "system-cluster-critical"
                  [32m+[0m[0m restart_policy                   = "Always"
                  [32m+[0m[0m scheduler_name                   = (known after apply)
                  [32m+[0m[0m service_account_name             = "ebs-csi-controller-sa"
                  [32m+[0m[0m share_process_namespace          = false
                  [32m+[0m[0m termination_grace_period_seconds = 30

                  [32m+[0m[0m affinity {
                      [32m+[0m[0m node_affinity {
                          [32m+[0m[0m preferred_during_scheduling_ignored_during_execution {
                              [32m+[0m[0m weight = 1

                              [32m+[0m[0m preference {
                                  [32m+[0m[0m match_expressions {
                                      [32m+[0m[0m key      = "eks.amazonaws.com/compute-type"
                                      [32m+[0m[0m operator = "NotIn"
                                      [32m+[0m[0m values   = [
                                          [32m+[0m[0m "fargate",
                                        ]
                                    }
                                }
                            }
                        }
                      [32m+[0m[0m pod_anti_affinity {
                          [32m+[0m[0m preferred_during_scheduling_ignored_during_execution {
                              [32m+[0m[0m weight = 100

                              [32m+[0m[0m pod_affinity_term {
                                  [32m+[0m[0m topology_key = "kubernetes.io/hostname"

                                  [32m+[0m[0m label_selector {
                                      [32m+[0m[0m match_expressions {
                                          [32m+[0m[0m key      = "app"
                                          [32m+[0m[0m operator = "In"
                                          [32m+[0m[0m values   = [
                                              [32m+[0m[0m "ebs-csi-controller",
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }

                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "controller",
                          [32m+[0m[0m "--endpoint=$(CSI_ENDPOINT)",
                          [32m+[0m[0m "--extra-tags=",
                          [32m+[0m[0m "--k8s-tag-cluster-id=clickhouse-cluster-nacho-2",
                          [32m+[0m[0m "--logging-format=text",
                          [32m+[0m[0m "--user-agent-extra=helm",
                          [32m+[0m[0m "--v=5",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/ebs-csi-driver/aws-ebs-csi-driver:v1.20.0"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "ebs-plugin"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "CSI_ENDPOINT"
                          [32m+[0m[0m value = "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name = "CSI_NODE_NAME"

                          [32m+[0m[0m value_from {
                              [32m+[0m[0m field_ref {
                                  [32m+[0m[0m api_version = "v1"
                                  [32m+[0m[0m field_path  = "spec.nodeName"
                                }
                            }
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name = "AWS_ACCESS_KEY_ID"

                          [32m+[0m[0m value_from {
                              [32m+[0m[0m secret_key_ref {
                                  [32m+[0m[0m key      = "key_id"
                                  [32m+[0m[0m name     = "aws-secret"
                                  [32m+[0m[0m optional = true
                                }
                            }
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name = "AWS_SECRET_ACCESS_KEY"

                          [32m+[0m[0m value_from {
                              [32m+[0m[0m secret_key_ref {
                                  [32m+[0m[0m key      = "access_key"
                                  [32m+[0m[0m name     = "aws-secret"
                                  [32m+[0m[0m optional = true
                                }
                            }
                        }
                      [32m+[0m[0m env {
                          [32m+[0m[0m name = "AWS_EC2_ENDPOINT"

                          [32m+[0m[0m value_from {
                              [32m+[0m[0m config_map_key_ref {
                                  [32m+[0m[0m key      = "endpoint"
                                  [32m+[0m[0m name     = "aws-meta"
                                  [32m+[0m[0m optional = true
                                }
                            }
                        }

                      [32m+[0m[0m liveness_probe {
                          [32m+[0m[0m failure_threshold     = 5
                          [32m+[0m[0m initial_delay_seconds = 10
                          [32m+[0m[0m period_seconds        = 10
                          [32m+[0m[0m success_threshold     = 1
                          [32m+[0m[0m timeout_seconds       = 3

                          [32m+[0m[0m http_get {
                              [32m+[0m[0m path   = "/healthz"
                              [32m+[0m[0m port   = "healthz"
                              [32m+[0m[0m scheme = "HTTP"
                            }
                        }

                      [32m+[0m[0m port {
                          [32m+[0m[0m container_port = 9808
                          [32m+[0m[0m name           = "healthz"
                          [32m+[0m[0m protocol       = "TCP"
                        }

                      [32m+[0m[0m readiness_probe {
                          [32m+[0m[0m failure_threshold     = 5
                          [32m+[0m[0m initial_delay_seconds = 10
                          [32m+[0m[0m period_seconds        = 10
                          [32m+[0m[0m success_threshold     = 1
                          [32m+[0m[0m timeout_seconds       = 3

                          [32m+[0m[0m http_get {
                              [32m+[0m[0m path   = "/healthz"
                              [32m+[0m[0m port   = "healthz"
                              [32m+[0m[0m scheme = "HTTP"
                            }
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "200Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/csi/sockets/pluginproxy/"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "socket-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=$(ADDRESS)",
                          [32m+[0m[0m "--v=2",
                          [32m+[0m[0m "--feature-gates=Topology=true",
                          [32m+[0m[0m "--extra-create-metadata",
                          [32m+[0m[0m "--leader-election=true",
                          [32m+[0m[0m "--default-fstype=ext4",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/external-provisioner:v3.5.0-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "csi-provisioner"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "ADDRESS"
                          [32m+[0m[0m value = "/var/lib/csi/sockets/pluginproxy/csi.sock"
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "20Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/csi/sockets/pluginproxy/"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "socket-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=$(ADDRESS)",
                          [32m+[0m[0m "--v=2",
                          [32m+[0m[0m "--leader-election=true",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/external-attacher:v4.3.0-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "csi-attacher"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "ADDRESS"
                          [32m+[0m[0m value = "/var/lib/csi/sockets/pluginproxy/csi.sock"
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "20Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/csi/sockets/pluginproxy/"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "socket-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=$(ADDRESS)",
                          [32m+[0m[0m "--leader-election=true",
                          [32m+[0m[0m "--extra-create-metadata",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/external-snapshotter/csi-snapshotter:v6.2.1-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "csi-snapshotter"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "ADDRESS"
                          [32m+[0m[0m value = "/var/lib/csi/sockets/pluginproxy/csi.sock"
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "20Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/csi/sockets/pluginproxy/"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "socket-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=$(ADDRESS)",
                          [32m+[0m[0m "--v=2",
                          [32m+[0m[0m "--handle-volume-inuse-error=false",
                          [32m+[0m[0m "--leader-election=true",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/external-resizer:v1.8.0-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "csi-resizer"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m env {
                          [32m+[0m[0m name  = "ADDRESS"
                          [32m+[0m[0m value = "/var/lib/csi/sockets/pluginproxy/csi.sock"
                        }

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "50Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/var/lib/csi/sockets/pluginproxy/"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "socket-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }
                  [32m+[0m[0m container {
                      [32m+[0m[0m args                       = [
                          [32m+[0m[0m "--csi-address=/csi/csi.sock",
                        ]
                      [32m+[0m[0m image                      = "public.ecr.aws/eks-distro/kubernetes-csi/livenessprobe:v2.10.0-eks-1-27-3"
                      [32m+[0m[0m image_pull_policy          = "IfNotPresent"
                      [32m+[0m[0m name                       = "liveness-probe"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m resources {
                          [32m+[0m[0m limits   = {
                              [32m+[0m[0m "cpu"    = "200m"
                              [32m+[0m[0m "memory" = "20Mi"
                            }
                          [32m+[0m[0m requests = {
                              [32m+[0m[0m "cpu"    = "5m"
                              [32m+[0m[0m "memory" = "10Mi"
                            }
                        }

                      [32m+[0m[0m security_context {
                          [32m+[0m[0m allow_privilege_escalation = false
                          [32m+[0m[0m privileged                 = false
                          [32m+[0m[0m read_only_root_filesystem  = true
                        }

                      [32m+[0m[0m volume_mount {
                          [32m+[0m[0m mount_path        = "/csi"
                          [32m+[0m[0m mount_propagation = "None"
                          [32m+[0m[0m name              = "socket-dir"
                          [32m+[0m[0m read_only         = false
                        }
                    }

                  [32m+[0m[0m security_context {
                      [32m+[0m[0m fs_group        = "1000"
                      [32m+[0m[0m run_as_group    = "1000"
                      [32m+[0m[0m run_as_non_root = true
                      [32m+[0m[0m run_as_user     = "1000"
                    }

                  [32m+[0m[0m toleration {
                      [32m+[0m[0m key      = "CriticalAddonsOnly"
                      [32m+[0m[0m operator = "Exists"
                    }
                  [32m+[0m[0m toleration {
                      [32m+[0m[0m effect             = "NoExecute"
                      [32m+[0m[0m operator           = "Exists"
                      [32m+[0m[0m toleration_seconds = "300"
                    }

                  [32m+[0m[0m volume {
                      [32m+[0m[0m name = "socket-dir"

                      [32m+[0m[0m empty_dir {}
                    }
                }
            }
        }
    }

[1m  # module.eks.kubernetes_pod_disruption_budget_v1.ebs_csi_controller[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_pod_disruption_budget_v1" "ebs_csi_controller" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-controller"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m max_unavailable = "1"

          [32m+[0m[0m selector {
              [32m+[0m[0m match_labels = {
                  [32m+[0m[0m "app"                        = "ebs-csi-controller"
                  [32m+[0m[0m "app.kubernetes.io/instance" = "aws-ebs-csi-driver"
                  [32m+[0m[0m "app.kubernetes.io/name"     = "aws-ebs-csi-driver"
                }
            }
        }
    }

[1m  # module.eks.kubernetes_role.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_role" "cluster_autoscaler" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "k8s-addon" = "cluster-autoscaler.addons.k8s.io"
              [32m+[0m[0m "k8s-app"   = "cluster-autoscaler"
            }
          [32m+[0m[0m name             = "cluster-autoscaler"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "configmaps",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "create",
              [32m+[0m[0m "list",
              [32m+[0m[0m "watch",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups     = [
              [32m+[0m[0m "",
            ]
          [32m+[0m[0m resource_names = [
              [32m+[0m[0m "cluster-autoscaler-priority-expander",
              [32m+[0m[0m "cluster-autoscaler-status",
            ]
          [32m+[0m[0m resources      = [
              [32m+[0m[0m "configmaps",
            ]
          [32m+[0m[0m verbs          = [
              [32m+[0m[0m "delete",
              [32m+[0m[0m "get",
              [32m+[0m[0m "update",
              [32m+[0m[0m "watch",
            ]
        }
    }

[1m  # module.eks.kubernetes_role.ebs_csi_leases_role[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_role" "ebs_csi_leases_role" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "ebs-csi-leases-role"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m api_groups = [
              [32m+[0m[0m "coordination.k8s.io",
            ]
          [32m+[0m[0m resources  = [
              [32m+[0m[0m "leases",
            ]
          [32m+[0m[0m verbs      = [
              [32m+[0m[0m "create",
              [32m+[0m[0m "delete",
              [32m+[0m[0m "get",
              [32m+[0m[0m "list",
              [32m+[0m[0m "update",
              [32m+[0m[0m "watch",
            ]
        }
    }

[1m  # module.eks.kubernetes_role_binding.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_role_binding" "cluster_autoscaler" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "k8s-addon" = "cluster-autoscaler.addons.k8s.io"
              [32m+[0m[0m "k8s-app"   = "cluster-autoscaler"
            }
          [32m+[0m[0m name             = "cluster-autoscaler"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "Role"
          [32m+[0m[0m name      = "cluster-autoscaler"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "cluster-autoscaler"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_role_binding.ebs_csi_leases_rolebinding[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_role_binding" "ebs_csi_leases_rolebinding" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-leases-rolebinding"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "Role"
          [32m+[0m[0m name      = "ebs-csi-leases-role"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = (known after apply)
          [32m+[0m[0m kind      = "ServiceAccount"
          [32m+[0m[0m name      = "ebs-csi-controller-sa"
          [32m+[0m[0m namespace = "kube-system"
        }
    }

[1m  # module.eks.kubernetes_service_account.cluster_autoscaler[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_service_account" "cluster_autoscaler" {
      [32m+[0m[0m automount_service_account_token = true
      [32m+[0m[0m default_secret_name             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m annotations      = (known after apply)
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "k8s-addon" = "cluster-autoscaler.addons.k8s.io"
              [32m+[0m[0m "k8s-app"   = "cluster-autoscaler"
            }
          [32m+[0m[0m name             = "cluster-autoscaler"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.eks.kubernetes_service_account.ebs_csi_controller_sa[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_service_account" "ebs_csi_controller_sa" {
      [32m+[0m[0m automount_service_account_token = true
      [32m+[0m[0m default_secret_name             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m annotations      = (known after apply)
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-controller-sa"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.eks.kubernetes_service_account.ebs_csi_node_sa[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_service_account" "ebs_csi_node_sa" {
      [32m+[0m[0m automount_service_account_token = true
      [32m+[0m[0m default_secret_name             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app.kubernetes.io/component"  = "csi-driver"
              [32m+[0m[0m "app.kubernetes.io/instance"   = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/managed-by" = "Helm"
              [32m+[0m[0m "app.kubernetes.io/name"       = "aws-ebs-csi-driver"
              [32m+[0m[0m "app.kubernetes.io/version"    = "1.20.0"
              [32m+[0m[0m "helm.sh/chart"                = "aws-ebs-csi-driver-2.20.0"
            }
          [32m+[0m[0m name             = "ebs-csi-node-sa"
          [32m+[0m[0m namespace        = "kube-system"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.eks.kubernetes_storage_class.gp3-encrypted[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_storage_class" "gp3-encrypted" {
      [32m+[0m[0m allow_volume_expansion = true
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m parameters             = {
          [32m+[0m[0m "encrypted" = "true"
          [32m+[0m[0m "fsType"    = "ext4"
          [32m+[0m[0m "type"      = "gp3"
        }
      [32m+[0m[0m reclaim_policy         = "Delete"
      [32m+[0m[0m storage_provisioner    = "ebs.csi.aws.com"
      [32m+[0m[0m volume_binding_mode    = "WaitForFirstConsumer"

      [32m+[0m[0m metadata {
          [32m+[0m[0m annotations      = {
              [32m+[0m[0m "storageclass.kubernetes.io/is-default-class" = "true"
            }
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "gp3-encrypted"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1mPlan:[0m 77 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m clickhouse_cluster_password = (sensitive value)
  [32m+[0m[0m clickhouse_cluster_url      = (known after apply)
  [32m+[0m[0m configure_kubectl           = "aws eks --region us-west-1 update-kubeconfig --name clickhouse-cluster-nacho-2"
  [32m+[0m[0m eks_cluster_arn             = (known after apply)
  [32m+[0m[0m eks_cluster_ca_certificate  = (sensitive value)
  [32m+[0m[0m eks_cluster_endpoint        = (known after apply)
  [32m+[0m[0m eks_cluster_name            = "clickhouse-cluster-nacho-2"
  [32m+[0m[0m eks_cluster_token           = (sensitive value)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
